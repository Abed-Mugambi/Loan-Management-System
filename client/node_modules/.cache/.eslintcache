[{"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\App.js":"3","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\auths\\Login.jsx":"4","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\auths\\Register.jsx":"5","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\landing\\Landing.jsx":"6","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\admin\\AddAdmin.jsx":"7","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\admin\\AdminPage.jsx":"8","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\ClientLoans.jsx":"9","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\Home.jsx":"10","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\EditLoan.jsx":"11","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\AddLoans.jsx":"12","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\AddLoan.jsx":"13","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\AddBorrower.jsx":"14","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrower.jsx":"15","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\EditBorrower.jsx":"16","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrowers.jsx":"17","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\AddPayments.jsx":"18","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\PaymentLoanInfo.jsx":"19","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\AllPayments.jsx":"20","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\messages\\EmailPage.jsx":"21","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\messages\\Message.jsx":"22","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\admin\\AllAdmins.jsx":"23","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\sidebar\\Sidebar.jsx":"24","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\OneLoan.jsx":"25","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\Loan.jsx":"26","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\bottom\\BotWidget.jsx":"27","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\TopWidget.jsx":"28","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\messages\\GetBorrowers.jsx":"29","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\ListPayments.jsx":"30","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\bottom\\ApprovalWidget.jsx":"31","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\bottom\\DatesWidget.jsx":"32","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\LoansWidget.jsx":"33","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\ClientsWidget.jsx":"34","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\PaymentsWidget.jsx":"35"},{"size":535,"mtime":1747043692559,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1747043692560,"results":"38","hashOfConfig":"37"},{"size":8050,"mtime":1747158053325,"results":"39","hashOfConfig":"37"},{"size":4028,"mtime":1747043692525,"results":"40","hashOfConfig":"37"},{"size":7668,"mtime":1747043692527,"results":"41","hashOfConfig":"37"},{"size":36434,"mtime":1747043692557,"results":"42","hashOfConfig":"37"},{"size":6631,"mtime":1747043692528,"results":"43","hashOfConfig":"37"},{"size":4482,"mtime":1747043692529,"results":"44","hashOfConfig":"37"},{"size":8173,"mtime":1747043692544,"results":"45","hashOfConfig":"37"},{"size":2456,"mtime":1747043692536,"results":"46","hashOfConfig":"37"},{"size":10589,"mtime":1747043692546,"results":"47","hashOfConfig":"37"},{"size":8753,"mtime":1747043692544,"results":"48","hashOfConfig":"37"},{"size":7434,"mtime":1747043692543,"results":"49","hashOfConfig":"37"},{"size":6175,"mtime":1747043692531,"results":"50","hashOfConfig":"37"},{"size":4222,"mtime":1747043692533,"results":"51","hashOfConfig":"37"},{"size":6037,"mtime":1747043692535,"results":"52","hashOfConfig":"37"},{"size":5992,"mtime":1747043692534,"results":"53","hashOfConfig":"37"},{"size":6384,"mtime":1747043692551,"results":"54","hashOfConfig":"37"},{"size":5269,"mtime":1747043692554,"results":"55","hashOfConfig":"37"},{"size":7233,"mtime":1747043692552,"results":"56","hashOfConfig":"37"},{"size":1250,"mtime":1747043692549,"results":"57","hashOfConfig":"37"},{"size":5050,"mtime":1747222010374,"results":"58","hashOfConfig":"37"},{"size":4695,"mtime":1747043692530,"results":"59","hashOfConfig":"37"},{"size":2300,"mtime":1747043692558,"results":"60","hashOfConfig":"37"},{"size":4387,"mtime":1747043692548,"results":"61","hashOfConfig":"37"},{"size":7151,"mtime":1747043692546,"results":"62","hashOfConfig":"37"},{"size":291,"mtime":1747043692538,"results":"63","hashOfConfig":"37"},{"size":360,"mtime":1747043692542,"results":"64","hashOfConfig":"37"},{"size":5105,"mtime":1747043692549,"results":"65","hashOfConfig":"37"},{"size":5262,"mtime":1747043692553,"results":"66","hashOfConfig":"37"},{"size":3817,"mtime":1747043692537,"results":"67","hashOfConfig":"37"},{"size":4017,"mtime":1747043692539,"results":"68","hashOfConfig":"37"},{"size":1590,"mtime":1747043692541,"results":"69","hashOfConfig":"37"},{"size":1407,"mtime":1747043692540,"results":"70","hashOfConfig":"37"},{"size":1622,"mtime":1747043692541,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1na36wc",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"75"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"75"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"75"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"75"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"75"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"75"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"75"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"75"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"75"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"75"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"75"},"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\index.js",[],[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\App.js",["202","203"],[],"import './App.css';\nimport React, { Fragment, useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\n\nimport Home from './components/dashboard/pages/home/Home';\nimport Login from './components/auths/Login';\nimport Landing from './components/landing/Landing';\n\nimport Register from './components/auths/Register';\n\nimport GetAllLoans from './components/dashboard/pages/loans/ClientLoans';\nimport AddLoan from './components/dashboard/pages/loans/AddLoan';\nimport AddBorrower from './components/dashboard/pages/borrowers/AddBorrower';\nimport Borrower from './components/dashboard/pages/borrowers/Borrower';\nimport Borrowers from './components/dashboard/pages/borrowers/Borrowers';\nimport EditLoan from './components/dashboard/pages/loans/EditLoan';\nimport EditBorrower from './components/dashboard/pages/borrowers/EditBorrower';\nimport AddLoans from './components/dashboard/pages/loans/AddLoans';\nimport AddPayments from './components/dashboard/pages/payments/AddPayments';\nimport Payments from './components/dashboard/pages/payments/AllPayments';\nimport Message from './components/dashboard/pages/messages/Message';\nimport EmailPage from './components/dashboard/pages/messages/EmailPage';\nimport PaymentLoansInfo from './components/dashboard/pages/payments/PaymentLoanInfo';\nimport AdminPage from './components/dashboard/admin/AdminPage';\nimport AddAdmin from './components/dashboard/admin/AddAdmin';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n  return (\n    <Router>\n      <div className='App py-10 px-10 '>\n        {/* <Topbar /> */}\n        <div>\n          <Fragment>\n            <Routes>\n              {/* LANDING */}\n              <Route exact path='/' element={<Landing />}></Route>\n\n              {/* REGISTER */}\n              <Route\n                exact\n                path='/register'\n                element={\n                  isAuthenticated ? (\n                    <Register setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              <Route\n                exact\n                path='/addAdmin'\n                element={\n                  isAuthenticated ? (\n                    <AddAdmin setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/admin' />\n                  )\n                }\n              ></Route>\n\n              {/* LOGIN */}\n              <Route\n                exact\n                path='/login'\n                element={\n                  !isAuthenticated ? (\n                    <Login setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              {/* LOGIN */}\n              <Route\n                exact\n                path='/admin'\n                element={\n                  isAuthenticated ? (\n                    <AdminPage setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              {/* HOME */}\n              <Route\n                exact\n                path='/home'\n                element={\n                  isAuthenticated ? (\n                    <Home setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/login' />\n                  )\n                }\n              ></Route>\n\n              <Route\n                exact\n                path='/borrowers'\n                element={\n                  isAuthenticated ? (\n                    <Borrowers setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n\n              {/* BORROWER */}\n\n              <Route\n                exact\n                path='/borrower/:id'\n                element={\n                  isAuthenticated ? (\n                    <Borrower setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/borrowers' />\n                  )\n                }\n              ></Route>\n\n              {/* EDIT BORROWER */}\n              <Route\n                exact\n                path='/editBorrower/:id'\n                element={\n                  isAuthenticated ? (\n                    <EditBorrower setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/borrower' />\n                  )\n                }\n              ></Route>\n\n              {/* ADD BORROWER */}\n              <Route\n                exact\n                path='/addBorrower'\n                element={\n                  isAuthenticated ? (\n                    <AddBorrower setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/borrowers' />\n                  )\n                }\n              ></Route>\n\n              {/* LOANS */}\n\n              <Route\n                exact\n                path='/loans'\n                element={\n                  isAuthenticated ? (\n                    <GetAllLoans setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/login' />\n                  )\n                }\n              ></Route>\n              {/* ADD LOAN (BORROWER PAGE)*/}\n              <Route\n                exact\n                path='/addLoan/:id'\n                element={\n                  isAuthenticated ? (\n                    <AddLoan setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* ADD LOANS (LOANS PAGE) */}\n              <Route\n                exact\n                path='/addLoan'\n                element={\n                  isAuthenticated ? (\n                    <AddLoans setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* EDIT LOANS */}\n              <Route\n                exact\n                path='/editLoan/:id'\n                element={\n                  isAuthenticated ? (\n                    <EditLoan setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* PAYMENTS */}\n              {/* ALL PAYMENTS */}\n\n              <Route\n                exact\n                path='/payments'\n                element={\n                  isAuthenticated ? (\n                    <Payments setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/login' />\n                  )\n                }\n              ></Route>\n\n              {/* ADD PAYMENT (BORROWER PAGE)*/}\n              <Route\n                exact\n                path='/addPayments/:id'\n                element={\n                  isAuthenticated ? (\n                    <PaymentLoansInfo setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              <Route\n                exact\n                path='/payment/:client_id/:loan_id'\n                element={\n                  isAuthenticated ? (\n                    <PaymentLoansInfo setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/loans' />\n                  )\n                }\n              ></Route>\n\n              {/* MESSAGES */}\n              <Route\n                exact\n                path='/emailClient'\n                element={\n                  isAuthenticated ? (\n                    <EmailPage setAuth={setAuth} />\n                  ) : (\n                    <Navigate to='/home' />\n                  )\n                }\n              ></Route>\n            </Routes>\n          </Fragment>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\auths\\Login.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\auths\\Register.jsx",["204"],[],"import React, { useState } from 'react';\n\nimport { ArrowBackIosNew } from '@mui/icons-material';\nimport { Link } from 'react-router-dom';\n\nconst Register = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    address: '',\n    username: '',\n    password: '',\n  });\n\n  const {\n    firstname,\n    lastname,\n    contactNumber,\n    address,\n    email,\n    username,\n    password,\n  } = inputs;\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        firstname,\n        lastname,\n        contactNumber,\n        address,\n        email,\n        username,\n        password,\n      };\n\n      const response = await fetch('http://localhost:8000/register', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      // if (parseRes.token) {\n      //   localStorage.setItem('token', parseRes.token);\n      //   console.log(parseRes.token);\n      //   setAuth(true);\n      // } else {\n      //   setAuth(false);\n      //   console.log('Something wrong');\n      // }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <div className='flex flex-col h-[750px] w-[620px] border rounded-md shadow-md  mx-auto my-20 justify-center flex-wrap border-t-4 border-t-red-500 '>\n      {/* FORM */}\n      <div className=''>\n        <div className='flex justify-between items-center  px-8 py-8'>\n          {/* GREETINGS */}\n          <div className='mt-5'>\n            <h1 className='text-xl font-semibold '>\n              Welcome to <span className='text-red-500'>Maogma</span>.\n            </h1>\n            <small className='text-gray-400'>Please enter your details</small>\n          </div>\n\n          {/* BACK ARROW */}\n          <div className=''>\n            <Link to='/admin'>\n              <ArrowBackIosNew />\n            </Link>\n          </div>\n        </div>\n        <form\n          onSubmit={(e) => {\n            onSubmit(e);\n          }}\n          className='bg-white px-8  pb-8 mb-4'\n        >\n          <div className='flex w-full gap-5'>\n            {/* FIRSTNAME */}\n            <div className='mb-4 w-full'>\n              <label\n                className='block text-gray-700 text-sm font-bold mb-2'\n                htmlFor='firstname'\n              >\n                First Name:\n              </label>\n              <input\n                type='text'\n                className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                name='firstname'\n                value={firstname}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Enter your first name'\n              />\n            </div>\n            {/* LASTNAME */}\n            <div className='mb-4 w-full'>\n              <label\n                className='block text-gray-700 text-sm font-bold mb-2'\n                htmlFor='lastname'\n              >\n                Lastname:\n              </label>\n              <input\n                type='text'\n                className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                name='lastname'\n                value={lastname}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Enter your last name'\n              />\n            </div>\n          </div>\n\n          {/* CONTACT NUMBER */}\n          <div className='mb-4'>\n            <label\n              className='block text-gray-700 text-sm font-bold mb-2'\n              htmlFor='contactNumber'\n            >\n              Contact Number\n            </label>\n            <input\n              type='number'\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n              name='contactNumber'\n              value={contactNumber}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Contact Number'\n            />\n          </div>\n\n          {/* ADDRESS */}\n          <div className='mb-4'>\n            <label\n              className='block text-gray-700 text-sm font-bold mb-2'\n              htmlFor='address'\n            >\n              Address:\n            </label>\n            <input\n              type='text'\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n              name='address'\n              value={address}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Input your full address'\n            />\n          </div>\n\n          {/* EMAIL */}\n          <div className='mb-4'>\n            <label\n              className='block text-gray-700 text-sm font-bold mb-2'\n              htmlFor='email'\n            >\n              Email:\n            </label>\n            <input\n              type='email'\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n              name='email'\n              value={email}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Input your email address'\n            />\n          </div>\n\n          {/* USERNAME */}\n          <div className='mb-4'>\n            <label\n              className='block text-gray-700 text-sm font-bold mb-2'\n              htmlFor='username'\n            >\n              Username\n            </label>\n            <input\n              type='text'\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n              name='username'\n              value={username}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Choose a username you want'\n            />\n          </div>\n\n          {/* PASSWORD */}\n          <div className='mb-4'>\n            <label\n              className='block text-gray-700 text-sm font-bold mb-2'\n              htmlFor='password'\n            >\n              Password\n            </label>\n            <input\n              type='password'\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n              name='password'\n              value={password}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='*************'\n            />\n          </div>\n          <button\n            type='submit'\n            className='w-full text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1'\n          >\n            Create Account\n          </button>\n\n          <div className='text-center'>\n            <span className='text-xs text-gray-400 font-semibold'>\n              Don't have account?\n            </span>\n            <a\n              href='http://localhost:3000/login'\n              className='text-xs font-semibold text-red-700'\n            >\n              Sign in\n            </a>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\landing\\Landing.jsx",["205","206","207","208","209","210","211","212","213","214","215","216"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n// import { headerImg } from 'src/assets/debitcard.png';\n\nimport {\n  PermIdentity,\n  CreditScore,\n  ReceiptLong,\n  MailOutline,\n  Home,\n} from '@mui/icons-material';\n\nconst Landing = () => {\n  return (\n    <div className=''>\n      {/* NAVBAR */}\n      <div className='sticky top-0 w-full bg-white'>\n        <nav className='flex justify-between max-w-screen-xl px-4 py-5 mx-auto'>\n          <div className='flex items-center'>\n            <h3 className='text-xl font-extrabold tracking-tight text-red-500 '>\n              Maogma<span className='text-gray-900'>.</span>\n            </h3>\n          </div>\n          <div>\n            <ul class='flex flex-col font-medium lg:flex-row lg:space-x-8 lg:mt-0 items-center'>\n              {/* HOME */}\n              <li>\n                <a\n                  href='#'\n                  class='block py-2 pl-3 pr-4   rounded text-gray-700    lg:hover:text-white lg:hover:bg-red-500 font-light lg:text-x '\n                >\n                  Home\n                </a>\n              </li>\n\n              {/* ABOUT */}\n              <li>\n                <a\n                  href='#about'\n                  class='block py-2 pl-3 pr-4   rounded text-gray-700    lg:hover:text-white lg:hover:bg-red-500 font-light lg:text-x '\n                >\n                  About\n                </a>\n              </li>\n              {/* \n              <li>\n                <a\n                  href='#pricing'\n                  class='block py-2 pl-3 pr-4   rounded text-gray-700    lg:hover:text-white lg:hover:bg-red-500 font-light lg:text-x '\n                >\n                  Pricing\n                </a>\n              </li> */}\n\n              {/* CONTACT */}\n              <li>\n                <a\n                  href='#contacts'\n                  class='block py-2 pl-3 pr-4   rounded text-gray-700    lg:hover:text-white lg:hover:bg-red-500 font-light lg:text-x '\n                >\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n\n      {/* HERO SECTION */}\n      <section>\n        <div className='grid max-w-screen-xl px-4 pt-32 pb-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12 lg:pt-28'>\n          <div className='mr-auto place-self-center lg:col-span-7'>\n            <h1 className='max-w-2xl mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-5xl xl:text-6xl '>\n              Simplify your <br /> Loan <br /> Management\n            </h1>\n            <p class='max-w-2xl mb-6 font-light text-gray-500 lg:mb-8 md:text-lg lg:text-xl dark:text-gray-400'>\n              Easily track your loans, manage clients and make smart financial\n              decisions with our user-friendly app.\n            </p>\n\n            {/* BUTTONS */}\n            <div class='space-y-4 sm:flex sm:space-y-0 sm:space-x-4'>\n              <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-5'>\n                <Link to='/register'>Get Started</Link>\n              </button>\n              <button className='border border-gray-200 rounded sm:w-auto hover:bg-gray-100 focus:ring-4 focus:ring-gray-100  font-bold py-2 px-4 focus:outline-none focus:shadow-outline mr-5'>\n                <a href='#contacts'>Contact Us</a>\n              </button>\n            </div>\n          </div>\n\n          <div className='lg:mt-0 lg:col-span-5 lg:flex'>\n            <img\n              src='https://img.freepik.com/free-vector/revenue-concept-illustration_114360-1556.jpg?w=826&t=st=1673963777~exp=1673964377~hmac=ca7b707ad30a71107b485b530a4bb4f9620b6b0fdb6abfa61b0a5b3cabc1930e'\n              alt=''\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* FEATURED SECTION */}\n      <section id='featured' className='mb-20'>\n        <div className='max-w-screen-xl px-4 py-8 mx-auto lg:py-16 lg:px-6'>\n          {/* FEATURED TITLE */}\n          <div className='flex flex-col my-20 py-10 w-1/2 mx-auto text-center'>\n            <h2 class='mb-4 text-3xl font-extrabold leading-tight tracking-tight text-gray-900 '>\n              We Provide Quality Service\n            </h2>\n            <p class='mb-6 font-light text-gray-500  md:text-lg'>\n              We will provide the best service to you so that you understand how\n              to use and get to know the features that we provide\n            </p>\n          </div>\n\n          {/* FEATURED ITEMS */}\n          <div className='flex gap-10 justify-between'>\n            {/* FEATURE 1 : LOAN MGT */}\n            <div className='flex flex-col w-80 p-10  border rounded-xl hover:shadow-xl hover:bg-red-500 hover:text-white cursor-pointer'>\n              <div className=''>\n                <CreditScore className=' w-full text-red-500 rounded-full h-full text-2xl mb-2' />\n              </div>\n              <h4 className='text-md font-semibold mb-1'>Loan Management</h4>\n              <p>\n                We will provide management for your loan so that you can track\n                them easily\n              </p>\n            </div>\n\n            {/* FEATURE 2 : CLIENT MGT */}\n            <div className='flex flex-col w-80 p-10 rounded-xl border hover:shadow-xl hover:bg-red-500 hover:text-white cursor-pointer'>\n              <div className=''>\n                <PermIdentity className=' w-full text-red-500 rounded-full h-full text-2xl mb-2' />\n              </div>\n              <h4 className='text-md font-semibold mb-1'>Client Management</h4>\n              <p>\n                Offers client management plus managers can now email their\n                clients to notify them.\n              </p>\n            </div>\n\n            {/* FEATURE 3 : PAYMENT MGT */}\n            <div className='flex flex-col w-80 p-10 rounded-xl border hover:shadow-xl hover:bg-red-500 hover:text-white cursor-pointer '>\n              <div className=''>\n                <ReceiptLong className=' w-full text-red-500 rounded-full h-full text-2xl mb-2 ' />\n              </div>\n              <h4 className='text-md font-semibold mb-1'>\n                Payments Management\n              </h4>\n              <p>\n                Avoid payment delays by notifying managers about their client's\n                loan.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* BANNER SECTION */}\n      <section className='max-w-screen-xl px-4 mx-auto space-y-12 lg:space-y-20 lg:py-24 lg:px-6 bg-red-500 rounded-xl flex'>\n        {/* TEXT */}\n        <div className='text-gray-500 sm:text-lg text-center mx-auto'>\n          {/* TITLE */}\n          <h2 className='mb-5 text-3xl font-bold tracking-tight text-white'>\n            We will never leave your side, <br /> but will leave you a smile.{' '}\n          </h2>\n          <button className='bg-gray-800 hover:bg-red-900 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-5'>\n            <Link to='/register'>Get Started</Link>\n          </button>\n        </div>\n      </section>\n\n      {/* ABOUT SECTION */}\n      <section id='about'>\n        <div className='max-w-screen-xl px-4 py-8 mx-auto space-y-12 lg:space-y-20 lg:py-24 lg:px-6'>\n          {/* ITEM 1 */}\n          <div className='items-center gap-8 lg:grid lg:grid-cols-2 xl:gap-16'>\n            {/* TEXT */}\n            <div className='text-gray-500 sm:text-lg'>\n              {/* TITLE */}\n              <h2 className='mb-4 text-3xl font-extrabold tracking-tight text-gray-900'>\n                With Maogma, see how loans are released and Succeed.\n              </h2>\n\n              {/* DESCRIPTION 1 */}\n              <p className='mb-8 font-light lg:text-xl'>\n                You can create loans, update their amounts and approve pending\n                loans.\n              </p>\n\n              {/* FEATS */}\n              <ul\n                role='list'\n                class='pt-8 space-y-5 border-t border-gray-200 my-7'\n              >\n                <li class='flex space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-red-500 e-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span class='text-base font-medium leading-tight text-gray-900 '>\n                    Continuous integration and deployment\n                  </span>\n                </li>\n                <li class='flex space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-red-500 e-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span class='text-base font-medium leading-tight text-gray-900 '>\n                    Development workflow\n                  </span>\n                </li>\n                <li class='flex space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-red-500 e-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span class='text-base font-medium leading-tight text-gray-900 '>\n                    Loan management\n                  </span>\n                </li>\n              </ul>\n\n              {/* DESCRIPTION 2 */}\n              <p class='mb-8 font-light lg:text-xl'>\n                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quod\n                dicta aut, quasi ullam aliquid sed nostrum nesciunt iusto quae\n                incidunt.\n              </p>\n            </div>\n\n            {/* IMAGE */}\n            <div>\n              <img\n                src='https://i.pinimg.com/564x/bd/4f/32/bd4f32d8958199060ad5e4c04e892bce.jpg'\n                alt=''\n              />\n            </div>\n          </div>\n\n          {/* ITEM 2 */}\n          <div class='items-center gap-8 lg:grid lg:grid-cols-2 xl:gap-16'>\n            {/* IMAGE */}\n            <img\n              src='https://i.pinimg.com/564x/6f/e0/8f/6fe08f134f55d89ec81c0716c10c7ccf.jpg'\n              alt=''\n            />\n\n            {/* TEXT */}\n            <div class='text-gray-500 sm:text-lg'>\n              {/* TITLE */}\n              <h2 class='mb-4 text-3xl font-extrabold tracking-tight text-gray-900 '>\n                Communicate with your clients through the app.\n              </h2>\n\n              {/* DESCRIPTION 1 */}\n              <p class='mb-8 font-light lg:text-xl'>\n                Instantly notify your clients with their upcoming loan payments.\n                Update them with their balance or tell them that their loan has\n                been approved and ready for disbursement.\n              </p>\n\n              {/* FEATURES */}\n              <ul\n                role='list'\n                class='pt-8 space-y-5 border-t border-gray-200 my-7 '\n              >\n                <li class='flex space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-red-500 '\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span class='text-base font-medium leading-tight text-gray-900 '>\n                    Send Email\n                  </span>\n                </li>\n                <li class='flex space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-red-500 '\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span class='text-base font-medium leading-tight text-gray-900 '>\n                    Notify clients\n                  </span>\n                </li>\n                <li class='flex space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-red-500 '\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span class='text-base font-medium leading-tight text-gray-900 '>\n                    Send Loan Status / Approvals\n                  </span>\n                </li>\n              </ul>\n\n              {/* DESCRIPTION 2 */}\n              <p class='font-light lg:text-xl'>\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n                Facilis repudiandae quis commodi odio excepturi exercitationem\n                ipsum et sed nesciunt facere.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* PRICING SECTION */}\n      {/* <section id='pricing'>\n        <div className='max-w-screen-xl px-4 py-8 mx-auto lg:py-24 lg:px-6'>\n          <div class='max-w-screen-md mx-auto mb-8 text-center lg:mb-12'>\n            <h2 class='mb-4 text-3xl font-extrabold tracking-tight text-gray-900 '>\n              Designed for business teams like yours\n            </h2>\n            <p class='mb-5 font-light text-gray-500 sm:text-xl '>\n              Here at Maogma we focus on markets where technology, financing,\n              and capital can unlock long-term value and drive economic growth.\n            </p>\n          </div>\n\n          <div className='space-y-8 lg:grid lg:grid-cols-3 sm:gap-6 xl:gap-10 lg:space-y-0'>\n            <div className='flex flex-col max-w-lg p-6 mx-auto text-center text-gray-900 bg-white border border-gray-200 rounded-lg shadow-md '>\n              <h3 class='mb-4 text-2xl font-semibold'>Starter</h3>\n              <p class='font-light text-gray-500 sm:text-lg dark:text-gray-400'>\n                Best option for personal use & for your next project.\n              </p>\n              <div class='flex items-baseline justify-center my-8'>\n                <span class='mr-2 text-5xl font-extrabold'>₱1,5k</span>\n                <span class='text-gray-500 dark:text-gray-400'>/month</span>\n              </div>\n              <ul role='list' class='mb-8 space-y-4 text-left'>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>Individual configuration</span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>No setup, or hidden fees</span>\n                </li>\n\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>\n                    Premium support: <span class='font-semibold'>6 months</span>\n                  </span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>\n                    Free updates: <span class='font-semibold'>6 months</span>\n                  </span>\n                </li>\n              </ul>\n              <a\n                href='#'\n                class='text-white bg-red-500 hover:bg-red-700 focus:ring-4 focus:ring-red-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center '\n              >\n                Get started\n              </a>\n            </div>\n\n            <div className='flex flex-col max-w-lg p-6 mx-auto text-center text-gray-900 bg-white border border-gray-200 rounded-lg shadow-md '>\n              <h3 class='mb-4 text-2xl font-semibold'>Company</h3>\n              <p class='font-light text-gray-500 sm:text-lg dark:text-gray-400'>\n                Relevant for multiple users, extended & premium support.\n              </p>\n              <div class='flex items-baseline justify-center my-8'>\n                <span class='mr-2 text-5xl font-extrabold'>₱5.4k</span>\n                <span class='text-gray-500 dark:text-gray-400'>/month</span>\n              </div>\n              <ul role='list' class='mb-8 space-y-4 text-left'>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>Individual configuration</span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>No setup, or hidden fees</span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>\n                    Premium support:{' '}\n                    <span class='font-semibold'>24 months</span>\n                  </span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>\n                    Free updates: <span class='font-semibold'>24 months</span>\n                  </span>\n                </li>\n              </ul>\n              <a\n                href='#'\n                class='text-white bg-red-500 hover:bg-red-700 focus:ring-4 focus:ring-red-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center '\n              >\n                Get started\n              </a>\n            </div>\n\n            <div className='flex flex-col max-w-lg p-6 mx-auto text-center text-gray-900 bg-white border border-gray-200 rounded-lg shadow-md '>\n              <h3 class='mb-4 text-2xl font-semibold'>Enterprise</h3>\n              <p class='font-light text-gray-500 sm:text-lg dark:text-gray-400'>\n                Best for large scale users and extended redistribution rights.\n              </p>\n              <div class='flex items-baseline justify-center my-8'>\n                <span class='mr-2 text-5xl font-extrabold'>₱27.4k</span>\n                <span class='text-gray-500 dark:text-gray-400'>/month</span>\n              </div>\n              <ul role='list' class='mb-8 space-y-4 text-left'>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>Individual configuration</span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>No setup, or hidden fees</span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>\n                    Premium support:{' '}\n                    <span class='font-semibold'>36 months</span>\n                  </span>\n                </li>\n                <li class='flex items-center space-x-3'>\n                  <svg\n                    class='flex-shrink-0 w-5 h-5 text-green-500 dark:text-green-400'\n                    fill='currentColor'\n                    viewBox='0 0 20 20'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n                      clip-rule='evenodd'\n                    ></path>\n                  </svg>\n                  <span>\n                    Free updates: <span class='font-semibold'>36 months</span>\n                  </span>\n                </li>\n              </ul>\n              <a\n                href='#'\n                class='text-white bg-red-500 hover:bg-red-700 focus:ring-4 focus:ring-red-200 font-medium rounded-lg text-sm px-5 py-2.5 text-center '\n              >\n                Get started\n              </a>\n            </div>\n          </div>\n        </div>\n      </section> */}\n\n      {/* BANNER 2 */}\n      <section className='max-w-screen-xl px-4 mx-auto space-y-12 lg:space-y-20 lg:py-24 lg:px-6 bg-red-500 rounded-xl flex'>\n        {/* TEXT */}\n        <div className=' sm:text-lg text-center mx-auto'>\n          {/* TITLE */}\n          <h2 className='mb-4 text-3xl font-extrabold leading-tight tracking-tight text-white'>\n            Start your free trial today\n          </h2>\n          <p class='mb-6 font-light text-white md:text-lg'>\n            Try Maogma Platform for 30 days. No credit card required.\n          </p>\n          <button className='bg-gray-800 hover:bg-red-900 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-5'>\n            <Link to='/register'>Free Trial for 30 days</Link>\n          </button>\n        </div>\n      </section>\n\n      {/* CONTACT */}\n      <section id='contacts'>\n        <div class='py-8 lg:py-16 px-4 mx-auto max-w-screen-md'>\n          <h2 class='mb-4 text-3xl tracking-tight font-extrabold text-center text-gray-900 '>\n            Contact Us\n          </h2>\n          <p class='mb-8 lg:mb-16 font-light text-center text-gray-500  sm:text-xl'>\n            Got a technical issue? Want to send feedback about a beta feature?\n            Need details about our Business plan? Let us know.\n          </p>\n          <form action='#' class='space-y-8'>\n            <div>\n              <label\n                for='email'\n                class='block mb-2 text-sm font-medium text-gray-900'\n              >\n                Your email\n              </label>\n              <input\n                type='email'\n                id='email'\n                class='shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5'\n                placeholder='maogma@gmail.com'\n                required\n              />\n            </div>\n            <div>\n              <label\n                for='subject'\n                class='block mb-2 text-sm font-medium text-gray-900 '\n              >\n                Subject\n              </label>\n              <input\n                type='text'\n                id='subject'\n                class='block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-primary-500 focus:border-primary-500'\n                placeholder='Let us know how we can help you'\n                required\n              />\n            </div>\n            <div class='sm:col-span-2'>\n              <label\n                for='message'\n                class='block mb-2 text-sm font-medium text-gray-900 '\n              >\n                Your message\n              </label>\n              <textarea\n                id='message'\n                rows='6'\n                class='block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg shadow-sm border border-gray-300 focus:ring-primary-500 focus:border-primary-500'\n                placeholder='Leave a comment...'\n              ></textarea>\n            </div>\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-5'>\n              Send\n            </button>\n          </form>\n        </div>\n      </section>\n\n      {/* FOOTER */}\n      <footer>\n        <div class='max-w-screen-xl p-4 py-6 mx-auto lg:py-16 md:p-8 lg:p-10'>\n          <hr className='my-6 border-gray-200 sm:mx-auto  lg:my-8' />\n          <div class='text-center'>\n            <a\n              href='#'\n              class='flex items-center justify-center mb-5 text-2xl font-semibold text-gray-900 '\n            >\n              <img src='' class='h-6 mr-3 sm:h-9' alt='' />\n              Maogma.\n            </a>\n            <span class='block text-sm text-center text-gray-500 '>\n              © 2022-2023 Maogma™. All Rights Reserved.\n            </span>\n            <ul class='flex justify-center mt-5 space-x-5'>\n              <li>\n                <a href='#' class='text-gray-500 hover:text-red-500 '>\n                  <svg\n                    class='w-5 h-5'\n                    fill='currentColor'\n                    viewBox='0 0 24 24'\n                    aria-hidden='true'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z'\n                      clip-rule='evenodd'\n                    />\n                  </svg>\n                </a>\n              </li>\n              <li>\n                <a href='#' class='text-gray-500 hover:text-red-500  '>\n                  <svg\n                    class='w-5 h-5'\n                    fill='currentColor'\n                    viewBox='0 0 24 24'\n                    aria-hidden='true'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z'\n                      clip-rule='evenodd'\n                    />\n                  </svg>\n                </a>\n              </li>\n              <li>\n                <a href='#' class='text-gray-500 hover:text-red-500  '>\n                  <svg\n                    class='w-5 h-5'\n                    fill='currentColor'\n                    viewBox='0 0 24 24'\n                    aria-hidden='true'\n                  >\n                    <path d='M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84' />\n                  </svg>\n                </a>\n              </li>\n              <li>\n                <a href='#' class='text-gray-500 hover:text-red-500  '>\n                  <svg\n                    class='w-5 h-5'\n                    fill='currentColor'\n                    viewBox='0 0 24 24'\n                    aria-hidden='true'\n                  >\n                    <path\n                      fill-rule='evenodd'\n                      d='M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z'\n                      clip-rule='evenodd'\n                    />\n                  </svg>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Landing;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\admin\\AddAdmin.jsx",["217","218"],[],"import { Logout } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Sidebar from '../../sidebar/Sidebar';\n\nconst AddAdmin = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    address: '',\n    username: '',\n    password: '',\n  });\n\n  const {\n    firstname,\n    lastname,\n    contactNumber,\n    address,\n    email,\n    username,\n    password,\n  } = inputs;\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const addSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Adding New Admin...',\n        success: 'Added Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n  const navigate = useNavigate();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        firstname,\n        lastname,\n        contactNumber,\n        address,\n        email,\n        username,\n        password,\n      };\n\n      const response = await fetch('http://localhost:8000/addAdmin', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      addSuccessful();\n      setTimeout(() => {\n        navigate(-1);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className='flex h-[900px] '>\n      <Sidebar />\n      <ToastContainer />\n\n      <div className='w-full h-[900px] border bg-white shadow-md rounded'>\n        <div className='w-full px-8 pt-6 pb-8 mb-4 bg-white  rounded '>\n          {/* HEADER */}\n          <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n            {/* TITLE */}\n            <div>\n              <h3 className='text-lg font-medium leading-6 text-white'>\n                Add New Admin\n              </h3>\n              <p className='mt-1 max-w-2xl text-sm text-white'>\n                Register all the required fields.\n              </p>\n            </div>\n            <ToastContainer />\n\n            {/* BUTTON */}\n\n            <div className='text-white'>\n              <button\n                className=''\n                onClick={(e) => {\n                  setAuth(false);\n                }}\n              >\n                <Link to='/login'>\n                  <Logout />\n                </Link>\n              </button>\n            </div>\n          </div>\n\n          <form\n            onSubmit={(e) => {\n              onSubmit(e);\n            }}\n            className='mt-5 p-8 rounded border shadow-md border-t-4 border-t-red-500 '\n          >\n            {/* FIRST NAME */}\n            <label htmlFor='firstname'>First Name: </label>\n            <input\n              type='text'\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\n              name='firstname'\n              value={firstname}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='First Name'\n              required\n            />\n            {/* LAST NAME */}\n            <label htmlFor='lastname'>Last Name: </label>\n            <input\n              type='text'\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\n              name='lastname'\n              value={lastname}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Last Name'\n              required\n            />\n            {/* CONTACT NUMBER */}\n            <label htmlFor='contactNumber'>Contact Number: </label>\n            <input\n              type='number'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='contactNumber'\n              value={contactNumber}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Contact Number'\n              required\n            />\n            {/* ADDRESS */}\n            <label htmlFor='address'>Address: </label>\n            <input\n              type='text'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='address'\n              value={address}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Address'\n              required\n            />\n            {/* EMAIL ADDRESS */}\n            <label htmlFor='email'>Email Address: </label>\n            <input\n              type='email'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='email'\n              value={email}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Email'\n              required\n            />\n            {/* PASSWORD */}\n            <label htmlFor='password'>Password: </label>\n            <input\n              type='password'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='password'\n              value={password}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='**********'\n              required\n            />\n            {/* USERNAME */}\n            <label htmlFor='username'>Username: </label>\n            <input\n              type='text'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='username'\n              value={username}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Username'\n              required\n            />\n\n            {/* BUTTONS */}\n            <button\n              type='submit'\n              className=' bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/6'\n            >\n              Save\n            </button>\n\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/6 ml-10'>\n              <Link to='/admin'>Cancel</Link>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddAdmin;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\admin\\AdminPage.jsx",["219","220"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  LocationOnOutlined,\n  MailOutline,\n  PermIdentity,\n  PhoneAndroid,\n  Publish,\n  Logout,\n} from '@mui/icons-material';\n\nimport Sidebar from '../../sidebar/Sidebar';\nimport Admins from './AllAdmins';\n\nexport default function AdminPage({ setAuth }) {\n  const [name, setName] = useState('');\n  const [contactnumber, setContactNumber] = useState();\n  const [address, setAddress] = useState('');\n  const [email, setEmail] = useState('');\n\n  const getAdmin = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/profile`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n      console.log(parseRes);\n\n      setName(parseRes.firstname + ' ' + parseRes.lastname);\n      setContactNumber(parseRes.contactnumber);\n      setAddress(parseRes.address);\n      setEmail(parseRes.email);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAdmin();\n  }, []);\n\n  return (\n    <div className='flex h-[900px]'>\n      <Sidebar />\n      <div className='w-full px-8 py-8 pb-8 mb-4 bg-white border rounded shadow-md h-[900px]'>\n        {/* HEADER */}\n        <div className='px-4 py-5 sm:px-6 rounded shadow-md bg-red-500 flex justify-between items-center'>\n          <div>\n            <h3 className='text-xl font-medium leading-6 text-white'>\n              WELCOME {name}\n            </h3>\n            <span className='text-md font-medium leading-6 text-white'>\n              Logged in: {new Date().toLocaleTimeString()}\n            </span>\n          </div>\n\n          <div>\n            {/* LOGOUT BUTTON */}\n            <div className='text-white float-right '>\n              {/* ADMIN PAGE */}\n              <button className='hover:-translate-y-0.5'>\n                <Link to='/admin'>\n                  <PermIdentity />\n                </Link>\n              </button>\n\n              {/* LOGOUT */}\n              <button\n                className='ml-2 hover:-translate-y-0.5'\n                onClick={(e) => {\n                  setAuth(false);\n                }}\n              >\n                <Link to='/login'>\n                  <Logout />\n                </Link>\n              </button>\n            </div>\n            <span className='mr-10 text-lg font-medium leading-6 text-white'>\n              {new Date().toLocaleString('en-US', {\n                day: 'numeric',\n                month: 'long',\n                year: 'numeric',\n              }) + ''}\n            </span>\n          </div>\n        </div>\n        <div className='flex gap-10'>\n          {/* ACCOUNT INFO */}\n          <div className='w-1/4 h-[720px] mt-5 border rounded shadow-md border-t-4 border-t-red-500'>\n            <div className='py-5 px-5 '>\n              <h3 className='text-xl mb-5 border-b-2'>Account Details</h3>\n              <div className='flex flex-col justify-between items-center py-5 px-5 '>\n                <img\n                  src='https://cdn3.iconfinder.com/data/icons/red-icons-1/512/Male-profile-icon-512.png'\n                  alt=''\n                  className='w-full h-full'\n                />\n                {/* USER INFO */}\n                <div className=''>\n                  <div>\n                    <div className='flex items-center my-5'>\n                      <PermIdentity className='text-lg' />\n                      <span className='ml-2.5'>{name}</span>\n                    </div>\n                    <div className='flex items-center my-5'>\n                      <LocationOnOutlined className='text-lg ' />\n                      <span className='ml-2.5'>{address}</span>\n                    </div>\n                  </div>\n                  <div className='flex items-center my-5'>\n                    <MailOutline className='text-lg ' />\n                    <span className='ml-2.5'>{email}</span>\n                  </div>\n                  <div className='flex items-center my-5'>\n                    <PhoneAndroid className='text-lg ' />\n                    <span className='ml-2.5'>{contactnumber}</span>\n                  </div>\n                  <div className='flex items-center my-5'></div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* OTHER ADMIN */}\n          <Admins />\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\ClientLoans.jsx",["221"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport Sidebar from '../../../sidebar/Sidebar';\nimport { DeleteForever, Edit, Update, Logout } from '@mui/icons-material';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst Loans = ({ setAuth }) => {\n  const [loans, setLoans] = useState([]);\n\n  const GetLoans = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allLoans/', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setLoans(parseRes);\n      // console.log(parseRes);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  // DELETE LOAN FUNCTION\n  const deleteNotif = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 2000);\n      }),\n      {\n        pending: 'Deleting Loan...',\n        success: 'Deleted Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 2000,\n      }\n    );\n  };\n\n  async function deleteLoan(id) {\n    try {\n      await fetch(`http://localhost:8000/loans/${id}`, {\n        method: 'DELETE',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      deleteNotif();\n      setTimeout(() => {\n        setLoans(loans.filter((loan) => loan.id !== id));\n      }, 2000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  useEffect(() => {\n    GetLoans();\n  }, []);\n\n  return (\n    <div className='flex  h-[900px] '>\n      <Sidebar />\n      <ToastContainer />\n      {/* <GetAllLoans /> */}\n      <div className='flex w-full'>\n        {/* Loans Information */}\n        <div className='w-full h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded '>\n          {/* HEADER */}\n          <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n            {/* TITLE */}\n            <div>\n              <h3 className='text-lg font-medium leading-6 text-white'>\n                Loans Report\n              </h3>\n              <p className='mt-1 max-w-2xl text-sm text-white'>\n                Loans summary and informations.\n              </p>\n            </div>\n\n            {/* BUTTON */}\n\n            <div className='text-white'>\n              <button\n                className=''\n                onClick={(e) => {\n                  setAuth(false);\n                }}\n              >\n                <Link to='/login'>\n                  <Logout />\n                </Link>\n              </button>\n            </div>\n          </div>\n\n          {/* TITLE */}\n          <div className='flex items-center justify-between border-y-2 mt-5'>\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n              Loan Transactions\n            </h3>\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'>\n              <Link to='/addLoan'>Add Loan</Link>\n            </button>\n          </div>\n\n          {/* ALL LOANS */}\n          <div className='w-full h-[650px] px-4 overflow-auto hover:overflow-scroll mt-5 border rounded shadow-md border-t-4 border-t-red-500 '>\n            <table className='table-fixed text-center  '>\n              <thead>\n                <tr>\n                  <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\n                  <th className='w-1/6 px-1 py-2 text-gray-600'>Client Name</th>\n                  <th className='w-1/6 px-1 py-2 text-gray-600'>Loan Type</th>\n                  <th className='w-1/6 px-1 py-2 text-gray-600'>\n                    Outstanding Balance\n                  </th>\n                  <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\n                  <th className='w-1/6 px-4 py-2 text-gray-600'>\n                    Amortization\n                  </th>\n                  <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\n                  <th className='w-1/6 px-4 py-2 text-gray-600'>\n                    Date Released\n                  </th>\n                  <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\n                  <th className='w-1/1 px-4 py-2 text-gray-600'>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loans.length <= 0 ? (\n                  <tr className='border px-4 py-2 bg-red-50'>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                  </tr>\n                ) : (\n                  loans.map((loan, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className='border px-4 py-2 bg-gray-50'>\n                          {loan.id}\n                        </td>\n                        <td className='border px-4 py-2'>\n                          {loan.firstname + ' ' + loan.lastname}\n                        </td>\n                        <td className='border px-4 py-2  bg-gray-50'>\n                          {loan.type}\n                        </td>\n                        <td className='border px-4 py-2 '>₱ {loan.balance}</td>\n                        <td className='border px-4 py-2  bg-gray-50'>\n                          ₱ {loan.gross_loan}\n                        </td>\n                        <td className='border px-4 py-2 '>₱ {loan.amort}</td>\n                        <td className='border px-4 py-2  bg-gray-50'>\n                          {loan.terms} month/s\n                        </td>\n                        <td className='border px-4 py-2 '>\n                          {new Date(loan.date_released).toDateString()}\n                        </td>\n                        <td className='border px-4 py-2  bg-gray-50'>\n                          {/* <span className='border bg-green-600 text-white px-5 py-1 rounded-md'>\n                            {loan.status}\n                          </span> */}\n                          {loan.status === 'Approved' ||\n                          loan.status === 'Fully Paid' ||\n                          loan.status === 'Disbursed' ? (\n                            <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\n                              {loan.status}\n                            </span>\n                          ) : loan.status === 'Declined' ? (\n                            <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\n                              {loan.status}\n                            </span>\n                          ) : (\n                            <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\n                              {loan.status}\n                            </span>\n                          )}\n                        </td>\n                        <td className='border px-4 py-2'>\n                          <button\n                            className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\n                            onClick={() => deleteLoan(loan.id)}\n                          >\n                            <DeleteForever className='text-lg' />\n                          </button>\n                          <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\n                            <Link to={`/editLoan/${loan.id}`}>\n                              <Edit className='text-sm' />\n                            </Link>\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loans;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\Home.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\EditLoan.jsx",["222","223"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Logout } from '@mui/icons-material';\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport Sidebar from '../../../sidebar/Sidebar';\nimport OneLoan from './OneLoan';\n\nconst EditLoan = ({ setAuth }) => {\n  const location = useLocation();\n\n  const loanId = location.pathname.split('/')[2];\n\n  const [clientId, setClientId] = useState('');\n  const GetLoan = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/loan/${loanId}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      const formatDate = (d) => {\n        const x = new Date(d);\n        x.setHours(x.getHours() + 8);\n        let month = x.getMonth() + 1;\n        if (month < 10) {\n          month = '0' + month;\n        }\n        let day = x.getDate();\n        if (day < 10) {\n          day = '0' + day;\n        }\n        return x.getFullYear() + '-' + month + '-' + day;\n      };\n\n      console.log(parseRes.date_released);\n      const start_date = formatDate(parseRes.date_released);\n      console.log(start_date);\n\n      const end_date = formatDate(parseRes.maturity_date);\n      console.log(end_date);\n\n      setInputs({\n        type: parseRes.type,\n        balance: parseRes.balance,\n        gross_loan: parseRes.gross_loan,\n        amort: parseRes.amort,\n        terms: parseRes.terms,\n        status: parseRes.status,\n        date_released: start_date,\n        maturity_date: end_date,\n      });\n\n      setClientId(parseRes.client_id);\n      console.log(clientId);\n      console.log('Date Released:', parseRes.date_released);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const [inputs, setInputs] = useState({\n    type: '',\n    balance: '',\n    gross_loan: '',\n    amort: '',\n    terms: '',\n    status: '',\n    date_released: '',\n    maturity_date: '',\n  });\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  // const timenow = new Date();\n  // const formatTime = (t) => {\n  //   const x = new Date(t);\n  //   let hour = x.getHours();\n\n  //   if (hour < 10) {\n  //     hour = '0' + hour;\n  //   }\n  //   let min = x.getMinutes();\n  //   if (min < 10) {\n  //     min = '0' + min;\n  //   }\n\n  //   let sec = x.getSeconds();\n  //   if (sec < 10) {\n  //     sec = '0' + sec;\n  //   }\n\n  //   return hour + ':' + min + ':' + sec;\n  // };\n\n  // console.log(formatTime(timenow));\n\n  // const timestamp = date_released + formatTime(timenow);\n  const {\n    type,\n    balance,\n    gross_loan,\n    amort,\n    terms,\n    status,\n    date_released,\n    maturity_date,\n  } = inputs;\n\n  const editSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Updating Loan...',\n        success: 'Updated Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        type,\n        balance,\n        gross_loan,\n        amort,\n        terms,\n        date_released,\n        status,\n        maturity_date,\n      };\n\n      const response = await fetch(`http://localhost:8000/loans/${loanId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: localStorage.getItem('token'),\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      editSuccessful();\n\n      setTimeout(() => {\n        navigate(-1);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    GetLoan();\n  }, []);\n\n  return (\n    <div className='flex h-[900px]'>\n      <Sidebar />\n      <ToastContainer />\n\n      <div className='w-full  h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded'>\n        {/* HEADER */}\n        <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n          {/* TITLE */}\n          <div>\n            <h3 className='text-lg font-medium leading-6 text-white'>\n              Update Loan Voucher # {loanId}\n            </h3>\n            <p className='mt-1 max-w-2xl text-sm text-white'>\n              Edit and update your loan\n            </p>\n          </div>\n\n          <div className='text-white'>\n            <button\n              className=''\n              onClick={(e) => {\n                setAuth(false);\n              }}\n            >\n              <Link to='/login'>\n                <Logout />\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        {/* LOAN INFO */}\n        <OneLoan />\n\n        {/* EDIT FORM */}\n        <div className='mt-5 px-4 py-2 h-[530px] rounded border shadow-md border-t-4 border-t-red-500 '>\n          <h3 className='text-lg font-medium leading-6 text-gray my-2 px-1 py-4 border-y-2 '>\n            Edit Form\n          </h3>\n          <form\n            onSubmit={(e) => {\n              onSubmit(e);\n            }}\n            className='grid grid-cols-2 p-2 '\n          >\n            {/* LOAN TYPE */}\n            <div>\n              <label htmlFor='type'>Loan Type: </label>\n              <select\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n                name='type'\n                id='type'\n                value={type}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              >\n                <option value='Personal Loan'>Personal Loan</option>\n                <option value='Salary Loan'>Salary Loan</option>\n                <option value='Business Loan'>Business Loan</option>\n              </select>\n            </div>\n            {/* LOAN STATUS */}\n            <div>\n              <label htmlFor='status'>Status: </label>\n              <select\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n                name='status'\n                id='status'\n                value={status}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              >\n                <option value='Approved'>Approved</option>\n                <option value='Fully Paid'>Fully Paid</option>\n                <option value='Disbursed'>Disbursed</option>\n                <option value='Pending'>Pending</option>\n                <option value='Declined'>Declined</option>\n              </select>\n            </div>\n            {/* GROSS LOAN */}\n            <div>\n              <label htmlFor='gross_loan'>Gross Loan: </label>\n              <input\n                type='number'\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n                name='gross_loan'\n                value={gross_loan}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Gross Loan'\n              />\n            </div>\n            {/* BALANCE */}\n            <div>\n              <label htmlFor='balance'>Balance: </label>\n              <input\n                type='number'\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n                name='balance'\n                value={balance}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Balance'\n              />\n            </div>\n            {/* AMORTIZATION */}\n            <div>\n              <label htmlFor='amort'>Amortization: </label>\n              <input\n                type='number'\n                className='block border border-grey-500t w-10/12 p-3 rounded mb-4'\n                name='amort'\n                value={amort}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Monthly Amortization'\n              />\n            </div>\n            {/* TERMS */}\n            <div>\n              <label htmlFor='terms'>Terms: </label>\n              <select\n                className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n                name='terms'\n                id='terms'\n                value={terms}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              >\n                <option value='1'>1 Month</option>\n                <option value='2'>2 Months</option>\n                <option value='3'>3 Months</option>\n                <option value='4'>4 Months</option>\n                <option value='5'>5 Months</option>\n                <option value='6'>6 Months</option>\n                <option value='12'>12 Months</option>\n              </select>\n            </div>\n            {/* DATE RELEASED */}\n            <div>\n              <label htmlFor='date_released'>Date Released: </label>\n              <input\n                type='date'\n                className='block border border-grey-500t w-10/12 p-3 rounded mb-4'\n                name='date_released'\n                value={date_released}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Date Released'\n              />\n            </div>\n            {/* MATURITY DATE */}\n            <div>\n              <label htmlFor='maturity_date'>Maturity Date: </label>\n              <input\n                type='date'\n                className='block border border-grey-500t w-10/12 p-3 rounded mb-4'\n                name='maturity_date'\n                value={maturity_date}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n                placeholder='Maturity Date'\n              />\n            </div>\n            {/* BUTTONS */}\n            <div>\n              <button\n                type='submit'\n                className=' text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'\n              >\n                Update\n              </button>\n              <Link\n                className=' ml-5 text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5 inline-block'\n                to={`/borrower/${clientId}`}\n              >\n                Back\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditLoan;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\AddLoans.jsx",["224","225"],[],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Logout } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport Sidebar from '../../../sidebar/Sidebar';\n\nconst AddLoans = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    client_id: '',\n    status: '',\n    type: '',\n    gross_loan: '',\n    balance: '',\n    amort: '',\n    terms: '',\n    date_released: '',\n    maturity_date: '',\n  });\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const {\n    client_id,\n    status,\n    type,\n    gross_loan,\n    balance,\n    amort,\n    terms,\n    date_released,\n    maturity_date,\n  } = inputs;\n\n  const navigate = useNavigate();\n  const addSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Adding Loan...',\n        success: 'Added Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const timenow = new Date();\n      const formatTime = (t) => {\n        const x = new Date(t);\n        let hour = x.getHours();\n\n        if (hour < 10) {\n          hour = '0' + hour;\n        }\n        let min = x.getMinutes();\n        if (min < 10) {\n          min = '0' + min;\n        }\n\n        let sec = x.getSeconds();\n        if (sec < 10) {\n          sec = '0' + sec;\n        }\n\n        return hour + ':' + min + ':' + sec;\n      };\n\n      console.log(formatTime(timenow));\n      const timestamp = date_released + ' ' + formatTime(timenow);\n\n      const body = {\n        client_id,\n        type,\n        status,\n        gross_loan,\n        balance,\n        amort,\n        terms,\n        date_released,\n        maturity_date,\n      };\n\n      const response = await fetch(`http://localhost:8000/loans`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: localStorage.getItem('token'),\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      addSuccessful();\n\n      setTimeout(() => {\n        navigate(`/Borrower/${client_id}`);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className='h-[900px] flex'>\n      <Sidebar />\n      <ToastContainer />\n      <div className='w-full h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded '>\n        {/* HEADER */}\n        <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md  '>\n          <div>\n            <h3 className='text-lg font-medium leading-6 text-white'>\n              Add New Loan\n            </h3>\n            <p className='mt-1 max-w-2xl text-sm text-white'>\n              Add a loan for a client\n            </p>\n          </div>\n          {/* <ToastContainer /> */}\n\n          {/* BUTTON */}\n\n          <div className='text-white'>\n            <button\n              className=''\n              onClick={(e) => {\n                setAuth(false);\n              }}\n            >\n              <Link to='/login'>\n                <Logout />\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        {/* FORM */}\n        <form\n          className='mt-5 p-8 rounded border shadow-md grid grid-cols-2 border-t-4 border-t-red-500 '\n          onSubmit={onSubmit}\n        >\n          {/* CLIENT ID */}\n          <div>\n            <label htmlFor='client_id'>Client ID:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Client ID'\n              name='client_id'\n              value={client_id}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* TYPE  */}\n          <div>\n            <label htmlFor='type'>Type of Loan:</label>\n            <select\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              name='type'\n              id='type'\n              value={type}\n              onChange={(e) => {\n                onChange(e);\n              }}\n            >\n              <option value='Personal Loan'>Personal Loan</option>\n              <option value='Salary Loan'>Salary Loan</option>\n              <option value='Business Loan'>Business Loan</option>\n            </select>\n          </div>\n\n          {/* STATUS */}\n          <div>\n            <label htmlFor='maturity_date'>Status:</label>\n            <select\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              name='status'\n              id='status'\n              value={status}\n              onChange={(e) => {\n                onChange(e);\n              }}\n            >\n              <option value='Approved'>Approved</option>\n              <option value='Fully Paid'>Fully Paid</option>\n              <option value='Disbursed'>Disbursed</option>\n              <option value='Pending'>Pending</option>\n              <option value='Declined'>Declined</option>\n            </select>\n          </div>\n\n          {/* GROSS LOAN */}\n          <div>\n            <label htmlFor='gross_loan'>Gross Loan:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Gross Loan'\n              name='gross_loan'\n              value={gross_loan}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* BALANCE */}\n          <div>\n            <label htmlFor='gross_loan'>Balance:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Balance'\n              name='balance'\n              value={balance}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* AMORTIZATION */}\n          <div>\n            <label htmlFor='amort'>Amortization:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Amortization'\n              name='amort'\n              value={amort}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* TERMS */}\n          <div>\n            <label htmlFor='terms'>Terms:</label>\n            <select\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              name='terms'\n              id='terms'\n              value={terms}\n              onChange={(e) => {\n                onChange(e);\n              }}\n            >\n              <option value='1'>1 Month</option>\n              <option value='2'>2 Months</option>\n              <option value='3'>3 Months</option>\n              <option value='4'>4 Months</option>\n              <option value='5'>5 Months</option>\n              <option value='6'>6 Months</option>\n              <option value='12'>12 Months</option>\n            </select>\n          </div>\n\n          {/* DATE RELEASED */}\n          <div>\n            <label htmlFor='date_released'>Date Released:</label>\n            <input\n              type='datetime-local'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Date Released'\n              name='date_released'\n              value={date_released}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* MATURITY DATE */}\n          <div>\n            <label htmlFor='maturity_date'>Maturity Date:</label>\n            <input\n              type='date'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Maturity Date'\n              name='maturity_date'\n              value={maturity_date}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* BUTTONS */}\n          <div className='mt-10'>\n            <button\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\n              type='submit'\n            >\n              Add New Loan\n            </button>\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'>\n              <Link to={`/loans`}>Cancel</Link>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddLoans;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\AddLoan.jsx",["226"],[],"import React, { useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Logout } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport Sidebar from '../../../sidebar/Sidebar';\n\nconst AddLoan = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    status: '',\n    type: '',\n    gross_loan: '',\n    balance: '',\n    amort: '',\n    terms: '',\n    date_released: '',\n    maturity_date: '',\n  });\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const {\n    type,\n    gross_loan,\n    balance,\n    amort,\n    terms,\n    date_released,\n    maturity_date,\n  } = inputs;\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const clientId = location.pathname.split('/')[2];\n\n  const addSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Adding Loan...',\n        success: 'Added Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        type,\n        gross_loan,\n        balance,\n        amort,\n        terms,\n        date_released,\n        maturity_date,\n      };\n\n      const response = await fetch(`http://localhost:8000/loans/${clientId}`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: localStorage.getItem('token'),\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      addSuccessful();\n\n      setTimeout(() => {\n        navigate(-1);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className='flex h-[900px]'>\n      <Sidebar />\n      <ToastContainer />\n\n      {/* Add Loan */}\n      <div className='w-full h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded'>\n        {/* TITLE */}\n        <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n          <div>\n            <h3 className='text-lg font-medium leading-6 text-white'>\n              Add Loan for Client #{clientId}\n            </h3>\n            <p className='mt-1 max-w-2xl text-sm text-white'>\n              Fill all the required fields.\n            </p>\n          </div>\n\n          {/* BUTTON */}\n\n          <div className='text-white'>\n            <button\n              className=''\n              onClick={(e) => {\n                setAuth(false);\n              }}\n            >\n              <Link to='/login'>\n                <Logout />\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        {/* FORM */}\n        <form\n          className='grid grid-cols-2 mt-5 p-8 h-[650px] rounded border shadow-md border-t-4 border-t-red-500 '\n          onSubmit={onSubmit}\n        >\n          {/* TYPE */}\n          <div>\n            <label htmlFor='type'>Type of Loan:</label>\n            <select\n              className='block border border-grey-500 w-10/12 p-3 rounded'\n              name='type'\n              id='type'\n              value={type}\n              onChange={(e) => {\n                onChange(e);\n              }}\n            >\n              <option value='Personal Loan'>Personal Loan</option>\n              <option value='Salary Loan'>Salary Loan</option>\n              <option value='Business Loan'>Business Loan</option>\n            </select>\n          </div>\n\n          {/* STATUS */}\n          <div>\n            <label htmlFor='maturity_date'>Status:</label>\n            <input\n              className='block border border-grey-500 w-10/12 p-3 rounded'\n              name='status'\n              id='status'\n              value='Pending'\n              disabled\n            />\n          </div>\n\n          {/* GROSS LOAN */}\n          <div>\n            <label htmlFor='gross_loan'>Gross Loan:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded'\n              placeholder='Gross Loan'\n              name='gross_loan'\n              value={gross_loan}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* BALANCE */}\n          <div>\n            <label htmlFor='gross_loan'>Balance:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded'\n              placeholder='Balance'\n              name='balance'\n              value={balance}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* AMORTIZATION */}\n          <div>\n            <label htmlFor='amort'>Amortization:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded '\n              placeholder='Amortization'\n              name='amort'\n              value={amort}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* TERMS */}\n          <div>\n            <label htmlFor='terms'>Terms:</label>\n            <select\n              className='block border border-grey-500 w-10/12 p-3 rounded '\n              name='terms'\n              id='terms'\n              value={terms}\n              onChange={(e) => {\n                onChange(e);\n              }}\n            >\n              <option value='1'>1 Month</option>\n              <option value='2'>2 Months</option>\n              <option value='3'>3 Months</option>\n              <option value='4'>4 Months</option>\n              <option value='5'>5 Months</option>\n              <option value='6'>6 Months</option>\n              <option value='12'>12 Months</option>\n            </select>\n          </div>\n\n          {/* DATE RELEASED */}\n          <div>\n            <label htmlFor='date_released'>Date Released:</label>\n            <input\n              type='datetime-local'\n              className='block border border-grey-500 w-10/12 p-3 rounded '\n              placeholder='Date Released'\n              name='date_released'\n              value={date_released}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* MATURITY DATE */}\n          <div>\n            <label htmlFor='maturity_date'>Maturity Date:</label>\n            <input\n              type='date'\n              className='block border border-grey-500 w-10/12 p-3 rounded '\n              placeholder='Maturity Date'\n              name='maturity_date'\n              value={maturity_date}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* BUTTONS */}\n          <div>\n            <button\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\n              type='submit'\n            >\n              Add New Loan\n            </button>\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'>\n              <Link to={`/borrower/${clientId}`}>Cancel</Link>\n            </button>\n          </div>\n\n          {/*  */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddLoan;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\AddBorrower.jsx",["227","228"],[],"import { Logout } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport Sidebar from '../../../sidebar/Sidebar';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AddBorrower = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    address: '',\n    username: '',\n  });\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const { firstname, lastname, contactNumber, address, email, username } =\n    inputs;\n\n  const addSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Adding Borrower...',\n        success: 'Added Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n\n  const navigate = useNavigate();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        firstname,\n        lastname,\n        contactNumber,\n        address,\n        email,\n        username,\n      };\n\n      const response = await fetch('http://localhost:8000/addClient', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: localStorage.getItem('token'),\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      addSuccessful();\n\n      setTimeout(() => {\n        navigate(-1);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className='flex h-[900px] '>\n      <Sidebar />\n\n      <div className='w-full h-[900px] border bg-white shadow-md rounded'>\n        <div className='w-full px-8 pt-6 pb-8 mb-4 bg-white  rounded '>\n          {/* HEADER */}\n          <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n            {/* TITLE */}\n            <div>\n              <h3 className='text-lg font-medium leading-6 text-white'>\n                Add New Borrower\n              </h3>\n              <p className='mt-1 max-w-2xl text-sm text-white'>\n                Register all the required fields.\n              </p>\n            </div>\n            <ToastContainer />\n\n            {/* BUTTON */}\n\n            <div className='text-white'>\n              <button\n                className=''\n                onClick={(e) => {\n                  setAuth(false);\n                }}\n              >\n                <Link to='/login'>\n                  <Logout />\n                </Link>\n              </button>\n            </div>\n          </div>\n\n          <form\n            onSubmit={(e) => {\n              onSubmit(e);\n            }}\n            className='mt-5 p-8 rounded border shadow-md border-t-4 border-t-red-500 '\n          >\n            {/* FIRST NAME */}\n            <label htmlFor='firstname'>First Name: </label>\n            <input\n              type='text'\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\n              name='firstname'\n              value={firstname}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='First Name'\n              required\n            />\n            {/* LAST NAME */}\n            <label htmlFor='lastname'>Last Name: </label>\n            <input\n              type='text'\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\n              name='lastname'\n              value={lastname}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Last Name'\n              required\n            />\n            {/* CONTACT NUMBER */}\n            <label htmlFor='contactNumber'>Contact Number: </label>\n            <input\n              type='number'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='contactNumber'\n              value={contactNumber}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Contact Number'\n              required\n            />\n            {/* ADDRESS */}\n            <label htmlFor='address'>Address: </label>\n            <input\n              type='text'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='address'\n              value={address}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Address'\n              required\n            />\n            {/* EMAIL ADDRESS */}\n            <label htmlFor='email'>Email Address: </label>\n            <input\n              type='email'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='email'\n              value={email}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Email'\n              required\n            />\n            {/* USERNAME */}\n            <label htmlFor='username'>Username: </label>\n            <input\n              type='text'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='username'\n              value={username}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Username'\n              required\n            />\n\n            {/* BUTTONS */}\n            <button\n              type='submit'\n              className=' bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/6'\n            >\n              Save\n            </button>\n\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/6 ml-10'>\n              <Link to='/borrowers'>Cancel</Link>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddBorrower;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrower.jsx",["229","230"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport {\n  LocationOnOutlined,\n  MailOutline,\n  PermIdentity,\n  PhoneAndroid,\n  Publish,\n  Logout,\n} from '@mui/icons-material';\nimport Sidebar from '../../../sidebar/Sidebar';\nimport LoanInfo from '../loans/Loan';\n\nexport default function Borrower({ setAuth }) {\n  const [name, setName] = useState('');\n  const [contactnumber, setContactNumber] = useState();\n  const [address, setAddress] = useState('');\n  const [email, setEmail] = useState('');\n\n  const location = useLocation();\n\n  const clientId = location.pathname.split('/')[2];\n\n  const getClient = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/client/${clientId}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n      console.log(parseRes);\n\n      setName(parseRes.firstname + ' ' + parseRes.lastname);\n      setContactNumber(parseRes.contactnumber);\n      setAddress(parseRes.address);\n      setEmail(parseRes.email);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getClient();\n  }, []);\n\n  return (\n    <div className='h-[900px] flex'>\n      <Sidebar />\n\n      <div className='w-full h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded '>\n        {/* BORROWER INFO */}\n        {/* HEADER */}\n        <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n          {/* TITLE */}\n          <div>\n            <h3 className='text-lg font-medium leading-6 text-white'>\n              Borrower Info\n            </h3>\n            <p className='mt-1 max-w-2xl text-sm text-white'>\n              All client's information\n            </p>\n          </div>\n\n          {/* BUTTON */}\n\n          <div className='text-white'>\n            <button\n              className=''\n              onClick={(e) => {\n                setAuth(false);\n              }}\n            >\n              <Link to='/login'>\n                <Logout />\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        {/* BORROWER ITEMS */}\n        <div className='flex'>\n          {/* ACCOUNT INFO */}\n          <div className='w-1/4 h-[720px] mt-5 border rounded shadow-md border-t-4 border-t-red-500'>\n            <div className='py-5 px-5 '>\n              <div className='flex flex-col justify-between items-center py-5 px-5 '>\n                <img\n                  src='https://cdn3.iconfinder.com/data/icons/red-icons-1/512/Male-profile-icon-512.png'\n                  alt=''\n                  className='w-full h-full'\n                />\n                {/* USER INFO */}\n                <div className=''>\n                  <div className='flex items-center my-5'>\n                    <PermIdentity className='text-lg' />\n                    <span className='ml-2.5'>{name}</span>\n                  </div>\n                  <div className='flex items-center my-5'>\n                    <MailOutline className='text-lg ' />\n                    <span className='ml-2.5'>{email}</span>\n                  </div>\n                  <div className='flex items-center my-5'>\n                    <PhoneAndroid className='text-lg ' />\n                    <span className='ml-2.5'>{contactnumber}</span>\n                  </div>\n                  <div className='flex items-center my-5'>\n                    <LocationOnOutlined className='text-lg ' />\n                    <span className='ml-2.5'>{address}</span>\n                  </div>\n                  <div className='flex items-center my-5'>\n                    <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\n                      <Link to={`/editBorrower/${clientId}`}>\n                        UPDATE CLIENT\n                      </Link>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* LOAN INFO */}\n          <LoanInfo />\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\EditBorrower.jsx",["231","232"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { Logout } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport Sidebar from '../../../sidebar/Sidebar';\n\nconst EditBorrower = ({ setAuth }) => {\n  const location = useLocation();\n\n  const clientId = location.pathname.split('/')[2];\n  const GetClient = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/client/${clientId}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setInputs({\n        firstname: parseRes.firstname,\n        lastname: parseRes.lastname,\n        contactNumber: parseRes.contactnumber,\n        email: parseRes.email,\n        address: parseRes.address,\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const [inputs, setInputs] = useState({\n    firstname: '',\n    lastname: '',\n    contactNumber: '',\n    email: '',\n    address: '',\n  });\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const { firstname, lastname, contactNumber, address, email } = inputs;\n\n  const addSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Updating Borrower...',\n        success: 'Updated Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n\n  const navigate = useNavigate();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        firstname,\n        lastname,\n        contactNumber,\n        address,\n        email,\n      };\n\n      const response = await fetch(\n        `http://localhost:8000/clients/${clientId}`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: localStorage.getItem('token'),\n          },\n          body: JSON.stringify(body),\n        }\n      );\n\n      const parseRes = await response.json();\n\n      // console.log(parseRes);\n\n      addSuccessful();\n\n      setTimeout(() => {\n        navigate(-1);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    GetClient();\n  }, []);\n\n  return (\n    <div className='flex h-[900px]'>\n      <Sidebar />\n      <ToastContainer />\n\n      <div className='w-full h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded'>\n        <div className='w-full px-8 pt-6 pb-8 mb-4 bg-white  rounded'>\n          {/* HEADER */}\n\n          <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n            {/* TITLE */}\n            <div>\n              <h3 className='text-lg font-medium leading-6 text-white'>\n                Update Borrower #{clientId}\n              </h3>\n              <p className='mt-1 max-w-2xl text-sm text-white'>\n                Update all the required fields.\n              </p>\n            </div>\n\n            {/* BUTTON */}\n\n            <div className='text-white'>\n              <button\n                className=''\n                onClick={(e) => {\n                  setAuth(false);\n                }}\n              >\n                <Link to='/login'>\n                  <Logout />\n                </Link>\n              </button>\n            </div>\n          </div>\n\n          {/* FORM */}\n          <form\n            onSubmit={(e) => {\n              onSubmit(e);\n            }}\n            className='mt-5 p-8 h-[650px] rounded border shadow-md border-t-4 border-t-red-500 '\n          >\n            <input\n              type='text'\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\n              name='firstname'\n              value={firstname}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='First Name'\n              required\n            />\n            <input\n              type='text'\n              className='block border border-grey-500 w-full p-3 rounded mb-4'\n              name='lastname'\n              value={lastname}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Last Name'\n              required\n            />\n            <input\n              type='number'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='contactNumber'\n              value={contactNumber}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Contact Number'\n              required\n            />\n            <input\n              type='text'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='address'\n              value={address}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Address'\n              required\n            />\n            <input\n              type='email'\n              className='block border border-grey-500t w-full p-3 rounded mb-4'\n              name='email'\n              value={email}\n              onChange={(e) => {\n                onChange(e);\n              }}\n              placeholder='Email'\n              required\n            />\n            <button\n              type='submit'\n              className=' text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'\n            >\n              Update\n            </button>\n            <button className=' ml-5 text-center py-3 rounded bg-red-500 text-white hover:bg-red-700 focus:outline-none my-1 w-1/5'>\n              <Link to={`/borrower/${clientId}`}>Back</Link>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditBorrower;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\borrowers\\Borrowers.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\AddPayments.jsx",["233"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst AddPayments = ({ loanId, balance, clientId }) => {\n  const [inputs, setInputs] = useState({\n    amount: '',\n    collection_date: '',\n    collected_by: '',\n    new_balance: '',\n    method: '',\n    client_id: clientId,\n    loan_id: loanId,\n  });\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const {\n    amount,\n    collection_date,\n    collected_by,\n    new_balance,\n    method,\n    client_id,\n    loan_id,\n  } = inputs;\n\n  const addSuccessful = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      }),\n      {\n        pending: 'Adding Payment...',\n        success: 'Added Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 1000,\n      }\n    );\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const body = {\n        amount,\n        collection_date,\n        collected_by,\n        new_balance,\n        method,\n        client_id,\n        loan_id,\n      };\n\n      const response = await fetch(`http://localhost:8000/payments/${loanId}`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: localStorage.getItem('token'),\n        },\n        body: JSON.stringify(body),\n      });\n\n      const parseRes = await response.json();\n\n      addSuccessful();\n\n      setTimeout(() => {\n        navigate(-1);\n      }, 3000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const updatedBalance = balance - inputs.amount;\n    setInputs((prevState) => ({\n      ...prevState,\n      new_balance: updatedBalance,\n    }));\n  }, [inputs.amount, balance]);\n\n  const navigate = useNavigate();\n  const goBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className='flex mt-5 px-4 py-2 h-[530px] rounded border shadow-md border-t-4 border-t-red-500 '>\n      <ToastContainer />\n\n      {/* Add Loan */}\n      <div className='w-full '>\n        <div className='flex w-full items-center justify-between border-y-2 mt-5'>\n          <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n            Loan Payment\n          </h3>\n        </div>\n\n        {/* FORM */}\n        <form className='grid grid-cols-2 p-2 mt-2 ' onSubmit={onSubmit}>\n          <div className='flex w-full '>\n            {/* CLIENT ID */}\n\n            <div className='w-auto'>\n              <label htmlFor='client_id'>Client ID:</label>\n              <input\n                type='number'\n                className='block border border-grey-500 p-3 rounded mb-4 mr-5'\n                name='client_id'\n                value={clientId}\n                disabled\n              />\n            </div>\n\n            {/* VOUCHER */}\n            <div className='w-auto'>\n              <label htmlFor='loan_id'>Voucher:</label>\n              <input\n                type='number'\n                className='block border border-grey-500 p-3 rounded mb-4'\n                placeholder='Voucher #'\n                name='loan_id'\n                value={loanId}\n                disabled\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </div>\n\n          {/* COLLECTION DATE */}\n          <div>\n            <label htmlFor='collection_date'>Collection Date:</label>\n            <input\n              type='date'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Collection Date'\n              name='collection_date'\n              value={collection_date}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* AMOUNT */}\n          <div>\n            <label htmlFor='amount'>Amount:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Amount'\n              name='amount'\n              value={amount}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* COLLECTED BY */}\n          <div>\n            <label htmlFor='collected_by'>Collected By:</label>\n            <input\n              type='text'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              placeholder='Collected by'\n              name='collected_by'\n              value={collected_by}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* NEW BALANCE */}\n          <div>\n            <label htmlFor='new_balance'>New Balances:</label>\n            <input\n              type='number'\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              name='new_balance'\n              value={inputs.new_balance}\n              // value={new_balance}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          {/* METHOD */}\n          <div>\n            <label htmlFor='terms'>Method:</label>\n            <select\n              className='block border border-grey-500 w-10/12 p-3 rounded mb-4'\n              name='method'\n              id='method'\n              value={method}\n              onChange={(e) => {\n                onChange(e);\n              }}\n            >\n              <option value='ATM'>ATM</option>\n              <option value='OTC'>OTC</option>\n              <option value='ONLINE BANK'>ONLINE BANK</option>\n              <option value='GCASH'>GCASH</option>\n            </select>\n          </div>\n\n          {/* BUTTONS */}\n          <div>\n            <button\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-auto ml-auto '\n              type='submit'\n            >\n              Add Payment\n            </button>\n            <button\n              onClick={goBack}\n              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/5 ml-10'\n            >\n              Back\n            </button>\n          </div>\n\n          {/*  */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPayments;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\PaymentLoanInfo.jsx",["234","235"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Logout } from '@mui/icons-material';\n\nimport Sidebar from '../../../sidebar/Sidebar';\nimport AddPayments from './AddPayments';\n\nconst PaymentLoansInfo = ({ setAuth }) => {\n  const [loans, setLoans] = useState([]);\n\n  const location = useLocation();\n\n  const clientId = location.pathname.split('/')[2];\n  const loanId = location.pathname.split('/')[3];\n\n  const GetLoans = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/loan/${loanId}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setLoans(parseRes);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    GetLoans();\n  }, []);\n\n  return (\n    <div className='flex h-[900px]'>\n      <Sidebar />\n\n      <div className='w-full h-[900px] mx-auto px-8 py-8 mb-4 border bg-white shadow-md rounded'>\n        {/* HEADER */}\n\n        <div className='flex items-center justify-between px-4 py-5 sm:px-6 bg-red-500 rounded shadow-md '>\n          {/* TITLE */}\n          <div>\n            <h3 className='text-lg font-medium leading-6 text-white'>\n              Payment for Loan Voucher #{loanId}\n            </h3>\n            <p className='mt-1 max-w-2xl text-sm text-white'>\n              Add a payment for a client\n            </p>\n          </div>\n\n          {/* BUTTON */}\n          <div className='text-white'>\n            <button\n              className=''\n              onClick={(e) => {\n                setAuth(false);\n              }}\n            >\n              <Link to='/login'>\n                <Logout />\n              </Link>\n            </button>\n          </div>\n        </div>\n\n        {/* Loans Information */}\n        <div className='mt-5 px-4 h-[180px] rounded border shadow-md border-t-4 border-t-red-500 '>\n          <div className='flex items-center justify-between border-y-2 mt-5'>\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n              Client's Loan\n            </h3>\n          </div>\n          <table className='table-fixed text-center '>\n            <thead>\n              <tr>\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>\n                  Outstanding Balance\n                </th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loans.length <= 0 ? (\n                <tr className='border px-4 py-2 bg-red-50'>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              ) : (\n                <tr>\n                  <td className='border px-4 py-2 bg-gray-50'>{loans.id}</td>\n                  <td className='border px-4 py-2 '>₱ {loans.gross_loan}</td>\n                  <td className='border px-4 py-2 '>₱ {loans.balance}</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    ₱ {loans.amort}\n                  </td>\n                  <td className='border px-4 py-2 '>{loans.terms} month/s</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    {new Date(loans.date_released).toDateString()}\n                  </td>\n                  <td className='border px-4 py-2 '>\n                    {loans.status === 'Approved' ||\n                    loans.status === 'Fully Paid' ? (\n                      <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    ) : loans.status === 'Declined' ? (\n                      <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    ) : loans.status === 'Pending' ? (\n                      <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    ) : (\n                      <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    )}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Payment Form */}\n        <AddPayments\n          loanId={loanId}\n          balance={loans.balance}\n          clientId={clientId}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentLoansInfo;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\AllPayments.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\messages\\EmailPage.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\messages\\Message.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\admin\\AllAdmins.jsx",["236","237"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport { DeleteForever, VisibilityOutlined, Logout } from '@mui/icons-material';\n\nconst Admins = ({ setAuth }) => {\n  const [admins, setAdmins] = useState([]);\n\n  const getAdmins = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allAdmins', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setAdmins(parseRes);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(admins);\n\n  // Delete ADMIN Function\n  const deleteNotif = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 2000);\n      }),\n      {\n        pending: 'Deleting Admin...',\n        success: 'Deleted Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 2000,\n      }\n    );\n  };\n\n  async function deleteAdmin(id) {\n    try {\n      await fetch(`http://localhost:8000/admins/${id}`, {\n        method: 'DELETE',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n      deleteNotif();\n      setTimeout(() => {\n        setAdmins(admins.filter((admin) => admin.id !== id));\n      }, 2000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(() => {\n    getAdmins();\n  }, []);\n\n  return (\n    <div className='w-full h-[720px] border bg-white shadow-md rounded mt-5  border-t-4 border-t-red-500'>\n      <ToastContainer />\n      <div className='py-5 px-5'>\n        {/* TITLE */}\n        <div className='flex items-center justify-between border-b-2'>\n          <h3 className='text-lg font-medium  text-gray   px-1 '>\n            Manage Admins\n          </h3>\n          <button className='border hover:bg-red-700 bg-red-500 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline mr-5'>\n            <Link to='/addAdmin'>Add Admin</Link>\n          </button>\n        </div>\n        {/* INFO */}\n        <div className='w-full h-[600px] px-4   mt-5 overflow-auto hover:overflow-scroll border rounded shadow-md '>\n          <table className='table-fixed text-center mb-2'>\n            <thead className=' mt-5'>\n              <tr className=' mt-10'>\n                <th className='w-1/1 px-1 py-2 text-gray-600'>ID</th>\n                <th className='w-1/4 px-1 py-2 text-gray-600'>Full Name</th>\n                <th className='w-1/4 px-1 py-2 text-gray-600'>\n                  Contact Number\n                </th>\n                <th className='w-1/4 px-4 py-2 text-gray-600'>Address</th>\n                <th className='w-1/4 px-1 py-2 text-gray-600'>Email</th>\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {admins.length <= 0 ? (\n                <tr className='border px-4 py-2 bg-red-50'>\n                  <td></td>\n                  <td></td>\n                  <td className='px-4 py-2 bg-red-50'>No Admin Data</td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              ) : (\n                admins.map((admin, index) => {\n                  return (\n                    <tr key={index}>\n                      <td className='border px-4 py-2 bg-gray-50'>\n                        {admin.id}\n                      </td>\n                      <td className='border px-4 py-2 '>\n                        {admin.firstname + ' ' + admin.lastname}{' '}\n                      </td>\n                      <td className='border px-4 py-2 bg-gray-50'>\n                        {admin.contactnumber}\n                      </td>\n                      <td className='border px-4 py-2'>{admin.address}</td>\n                      <td className='border px-4 py-2 bg-gray-50'>\n                        {admin.email}\n                      </td>\n                      <td className='border px-4 py-2'>\n                        <button\n                          className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\n                          onClick={() => deleteAdmin(admin.id)}\n                        >\n                          <DeleteForever className='text-lg' />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Admins;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\sidebar\\Sidebar.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\OneLoan.jsx",["238","239","240","241","242","243"],[],"import { DeleteForever, Edit, Update } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PaymentsInfo from '../payments/ListPayments';\n\nconst OneLoan = () => {\n  const [loans, setLoans] = useState([]);\n\n  const location = useLocation();\n\n  const loanID = location.pathname.split('/')[2];\n\n  const GetLoans = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/loan/${loanID}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setLoans(parseRes);\n      console.log(loans);\n      // console.log(loanId);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  // console.log(loanId);\n\n  useEffect(() => {\n    GetLoans();\n  }, []);\n\n  return (\n    <div>\n      {/* Loans Information */}\n      <div className='mt-5 px-4 py-2 h-[180px] rounded border shadow-md border-t-4 border-t-red-500 '>\n        {/* Active Loans */}\n        <div>\n          <div className='flex items-center justify-between border-y-2 '>\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n              Loan Info\n            </h3>\n          </div>\n          <table className='table-fixed text-center '>\n            <thead>\n              <tr>\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Loan Type</th>\n                <th className='w-1/6 px-1 py-2 text-gray-600'>\n                  Outstanding Balance\n                </th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loans.length <= 0 ? (\n                <tr className='border px-4 py-2 bg-red-50'>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              ) : (\n                <tr>\n                  <td className='border px-4 py-2 bg-gray-50'>{loans.id}</td>\n                  <td className='border px-4 py-2'>{loans.type}</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    ₱ {loans.balance}\n                  </td>\n                  <td className='border px-4 py-2 '>₱ {loans.gross_loan}</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    ₱ {loans.amort}\n                  </td>\n                  <td className='border px-4 py-2 '>{loans.terms} month/s</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    {new Date(loans.date_released).toDateString()}\n                  </td>\n                  <td className='border px-4 py-2 '>\n                    {loans.status === 'Approved' ||\n                    loans.status === 'Fully Paid' ? (\n                      <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    ) : loans.status === 'Declined' ? (\n                      <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    ) : loans.status === 'Pending' ? (\n                      <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    ) : (\n                      <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\n                        {loans.status}\n                      </span>\n                    )}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OneLoan;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\loans\\Loan.jsx",["244","245","246","247"],[],"import {\n  DeleteForever,\n  Edit,\n  Money,\n  Payments,\n  Update,\n} from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport PaymentsInfo from '../payments/ListPayments';\n\nconst LoanInfo = () => {\n  const [loans, setLoans] = useState([]);\n\n  const location = useLocation();\n\n  const clientId = location.pathname.split('/')[2];\n\n  const GetLoans = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/loans/${clientId}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setLoans(parseRes);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const deleteNotif = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 2000);\n      }),\n      {\n        pending: 'Deleting Loan...',\n        success: 'Deleted Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 2000,\n      }\n    );\n  };\n  // Delete loan Function\n  async function deleteLoan(id) {\n    try {\n      await fetch(`http://localhost:8000/loans/${id}`, {\n        method: 'DELETE',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n      deleteNotif();\n      setTimeout(() => {\n        setLoans(loans.filter((loan) => loan.id !== id));\n      }, 2000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(() => {\n    GetLoans();\n  }, []);\n\n  return (\n    <div className=''>\n      <ToastContainer />\n      {/* Loans Information */}\n      <div className='flex flex-col w-full mx-auto pl-8 py-4 mb-4 bg-white gap-5 '>\n        {/* Active Loans */}\n        <div className='h-[350px] overflow-hidden hover:overflow-scroll border rounded shadow-md px-8 py-8 border-t-4 border-t-red-500'>\n          <div className='flex items-center justify-between border-y-2'>\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n              Loan Transactions\n            </h3>\n            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mb-2 rounded focus:outline-none focus:shadow-outline w-auto mt-2'>\n              <Link to={`/addLoan/${clientId}`}>Add Loan</Link>\n            </button>\n          </div>\n          <table className='table-fixed text-center '>\n            <thead>\n              <tr>\n                <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\n                <th className='w-1/6 px-1 py-2 text-gray-600'>Loan Type</th>\n                <th className='w-1/6 px-1 py-2 text-gray-600'>\n                  Outstanding Balance\n                </th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Gross Loan</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Amortization</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Terms</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Date Released</th>\n                <th className='w-1/6 px-4 py-2 text-gray-600'>Status</th>\n                <th className='w-1/1 px-4 py-2 text-gray-600'>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loans.length <= 0 ? (\n                <tr className='border px-4 py-2 bg-red-50'>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              ) : (\n                loans.map((loan, index) => {\n                  return (\n                    <tr key={index}>\n                      <td className='border px-4 py-2 bg-gray-50'>{loan.id}</td>\n                      <td className='border px-4 py-2'>{loan.type}</td>\n                      <td className='border px-4 py-2 bg-gray-50'>\n                        ₱ {loan.balance}\n                      </td>\n                      <td className='border px-4 py-2 '>₱ {loan.gross_loan}</td>\n                      <td className='border px-4 py-2 bg-gray-50'>\n                        ₱ {loan.amort}\n                      </td>\n                      <td className='border px-4 py-2 '>\n                        {loan.terms} month/s\n                      </td>\n                      <td className='border px-4 py-2 bg-gray-50'>\n                        {new Date(loan.date_released).toDateString()}\n                      </td>\n                      <td className='border px-4 py-2 '>\n                        {loan.status === 'Approved' ||\n                        loan.status === 'Fully Paid' ? (\n                          <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\n                            {loan.status}\n                          </span>\n                        ) : loan.status === 'Declined' ? (\n                          <span className=' bg-red-400 text-white px-4 py-1 rounded-md'>\n                            {loan.status}\n                          </span>\n                        ) : loan.status === 'Pending' ? (\n                          <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\n                            {loan.status}\n                          </span>\n                        ) : (\n                          <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\n                            {loan.status}\n                          </span>\n                        )}\n                      </td>\n\n                      <td className='border px-4 py-2 flex'>\n                        <button\n                          className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-3 mb-2 rounded focus:outline-none focus:shadow-outline w-full text-sm'\n                          onClick={() => deleteLoan(loan.id)}\n                        >\n                          <DeleteForever className='text-lg' />\n                        </button>\n                        <button className='bg-red-500 hover:bg-red-700 text-white px-3 rounded focus:outline-none focus:shadow-outline h-10 ml-2 mr-2'>\n                          <Link to={`/editLoan/${loan.id}`}>\n                            <Edit className='text-sm' />\n                          </Link>\n                        </button>\n                        <button className='bg-red-500 hover:bg-red-700 text-white font-bold h-10 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\n                          <Link to={`/payment/${loan.client_id}/${loan.id}`}>\n                            ₱\n                          </Link>\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Payment History */}\n        <PaymentsInfo />\n      </div>\n    </div>\n  );\n};\n\nexport default LoanInfo;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\bottom\\BotWidget.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\TopWidget.jsx",[],[],"C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\messages\\GetBorrowers.jsx",["248"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Check, VisibilityOutlined, Logout } from '@mui/icons-material';\nimport Message from './Message';\n\nconst GetBorrowers = ({ setAuth }) => {\n  const [clients, setClients] = useState([]);\n  const [emails, setEmail] = useState('');\n  const getClients = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allClients', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      setClients(parseRes);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Select EMAIL CLIENT Function\n  async function selectClient(email) {\n    try {\n      await fetch(`http://localhost:8000/email/${email}`, {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      setEmail(clients.map((client) => email));\n\n      console.log(emails[0]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(() => {\n    getClients();\n  }, []);\n\n  return (\n    <div className='text-gray-900'>\n      {/* EMAIL PAGE ITEMS */}\n      <div className='flex gap-5'>\n        {/* ALL CLIENT CONTACT INFO */}\n        <div className='w-1/2'>\n          {/* TITLE */}\n          <div className='flex items-center justify-between border-y-2 mt-5'>\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n              Clients Contact Info\n            </h3>\n          </div>\n          {/* INFO */}\n          <div className='w-full h-[650px] px-4 overflow-auto hover:overflow-scroll mt-5 border rounded shadow-md border-t-4 border-t-red-500 '>\n            <table className='table-fixed text-center'>\n              <thead className=''>\n                <tr className=''>\n                  <th className='w-1/1 px-1 py-2 text-gray-600'>ID</th>\n                  <th className='w-1/4 px-1 py-2 text-gray-600'>Full Name</th>\n                  <th className='w-1/4 px-1 py-2 text-gray-600'>\n                    Contact Number\n                  </th>\n                  <th className='w-1/4 px-4 py-2 text-gray-600'>Address</th>\n                  <th className='w-1/4 px-1 py-2 text-gray-600'>Email</th>\n                  <th className='w-1/1 px-1 py-2 text-gray-600'>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {clients.length <= 0 ? (\n                  <tr className='border px-4 py-2 bg-red-50'>\n                    <td></td>\n                    <td></td>\n                    <td className='px-4 py-2 bg-red-50'>No Client Data</td>\n                    <td></td>\n                    <td></td>\n                  </tr>\n                ) : (\n                  clients.map((client, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className='border px-4 py-2 bg-gray-50'>\n                          {client.id}\n                        </td>\n                        <td className='border px-4 py-2 '>\n                          {client.firstname + ' ' + client.lastname}{' '}\n                        </td>\n                        <td className='border px-4 py-2 bg-gray-50'>\n                          {client.contactnumber}\n                        </td>\n                        <td className='border px-4 py-2'>{client.address}</td>\n                        <td className='border px-4 py-2 bg-gray-50'>\n                          {client.email}\n                        </td>\n                        <td className='border px-4 py-2'>\n                          <div className='flex'>\n                            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full mr-2 '>\n                              <Link to={`/Borrower/${client.id}`}>\n                                <VisibilityOutlined className='text-sm' />\n                              </Link>\n                            </button>\n                            <button\n                              className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '\n                              onClick={() => selectClient(client.email)}\n                            >\n                              <Check />\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {/* EMAIL FORM */}\n        <div className='w-1/2'>\n          {/* TITLE */}\n          <div className='flex items-center justify-between border-y-2 mt-5'>\n            <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n              Email Form\n            </h3>\n          </div>\n          <Message email={emails[0]} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GetBorrowers;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\payments\\ListPayments.jsx",["249","250","251"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { DeleteForever, Edit, Update } from '@mui/icons-material';\nimport { toast, ToastContainer } from 'react-toastify';\n\nconst PaymentsInfo = () => {\n  const [payments, setPayments] = useState([]);\n\n  const location = useLocation();\n\n  const clientId = location.pathname.split('/')[2];\n\n  const GetPayments = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:8000/payments/${clientId}`,\n        {\n          method: 'GET',\n          headers: { Authorization: localStorage.getItem('token') },\n        }\n      );\n\n      const parseRes = await response.json();\n\n      setPayments(parseRes);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  console.log(payments);\n\n  const deleteNotif = () => {\n    toast.promise(\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve();\n        }, 2000);\n      }),\n      {\n        pending: 'Deleting Payment...',\n        success: 'Deleted Succesfully!',\n        error: 'Error!',\n      },\n      {\n        autoClose: 2000,\n      }\n    );\n  };\n  // Delete loan Function\n  async function deletePayment(id) {\n    try {\n      await fetch(`http://localhost:8000/payment/${id}`, {\n        method: 'DELETE',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n      deleteNotif();\n      setTimeout(() => {\n        setPayments(payments.filter((payment) => payment.id !== id));\n      }, 2000);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(() => {\n    GetPayments();\n  }, []);\n\n  return (\n    <div className='h-[350px] overflow-hidden hover:overflow-scroll border rounded shadow-md px-8 py-8 border-t-4 border-t-red-500'>\n      <ToastContainer />\n\n      {/* Payment History */}\n      <div className='flex items-center justify-between border-y-2 '>\n        <h3 className='text-lg font-medium leading-6 text-gray my-2  px-1 py-2 '>\n          Payment History\n        </h3>\n      </div>\n      <table className='table-fixed text-center '>\n        <thead>\n          <tr>\n            <th className='w-1/1 px-1 py-2 text-gray-600'>Voucher</th>\n            <th className='w-1/5 px-1 py-2 text-gray-600'>Amount</th>\n            <th className='w-1/5 px-4 py-2 text-gray-600'>Collection Date</th>\n            <th className='w-1/5 px-1 py-2 text-gray-600'>New Balance</th>\n            <th className='w-1/5 px-4 py-2 text-gray-600'>Collected By:</th>\n            <th className='w-1/5 px-4 py-2 text-gray-600'>Method</th>\n            <th className='w-1/5 px-4 py-2 text-gray-600'>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {payments.length <= 0 ? (\n            <tr className='border px-4 py-2 bg-red-50'>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td className='px-4 py-2 bg-red-50'>No Payment Data</td>\n              <td></td>\n              <td></td>\n              <td></td>\n            </tr>\n          ) : (\n            payments.map((payment, index) => {\n              return (\n                <tr key={index}>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    {payment.loan_id}\n                  </td>\n                  <td className='border px-4 py-2 '>₱ {payment.amount}</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    {new Date(payment.collection_date).toDateString()}\n                  </td>\n                  <td className='border px-4 py-2'>₱ {payment.new_balance}</td>\n                  <td className='border px-4 py-2 bg-gray-50'>\n                    {payment.collected_by}\n                  </td>\n                  <td className='border px-4 py-2 '>\n                    {payment.method === 'ATM' ? (\n                      <span className=' bg-green-500 text-white px-4 py-1 rounded-md'>\n                        {payment.method}\n                      </span>\n                    ) : payment.method === 'OTC' ? (\n                      <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\n                        {payment.method}\n                      </span>\n                    ) : payment.method === 'ONLINE BANK' ? (\n                      <span className=' bg-orange-300 text-white px-4 py-1 rounded-md'>\n                        {payment.method}\n                      </span>\n                    ) : (\n                      <span className=' bg-blue-500 text-white px-4 py-1 rounded-md'>\n                        {payment.method}\n                      </span>\n                    )}\n                  </td>\n                  <td className='border px-4 py-2 '>\n                    {' '}\n                    <button\n                      className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-3 rounded focus:outline-none focus:shadow-outline  text-sm'\n                      onClick={() => deletePayment(payment.id)}\n                    >\n                      <DeleteForever className='text-lg' />\n                    </button>\n                  </td>\n                </tr>\n              );\n            })\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PaymentsInfo;\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\bottom\\ApprovalWidget.jsx",["252","253","254"],[],"import { VisibilityOutlined } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { Edit } from '@mui/icons-material';\nimport { Link } from 'react-router-dom';\n\nexport default function ApprovalWidget() {\n  const [loans, setLoans] = useState([]);\n\n  const getLoans = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allLoans', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n      // console.log(parseRes);\n\n      setLoans(parseRes);\n      console.log(loans);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getLoans();\n  }, []);\n\n  console.log(loans.sort((a, b) => a.maturity_date - b.maturity_date));\n\n  return (\n    <div className='w-full h-[450px] '>\n      {/* CLIENTS */}\n      <div className=' mt-5 p-8 rounded-xl border border-t-4 border-t-red-500 cursor-pointer shadow-md'>\n        <h3 className='text-xl mb-5 border-b-2'>Loans For Approval</h3>\n        <div className='flex justify-between items-center'>\n          <div className='w-full h-[350px] overflow-auto hover:overflow-scroll'>\n            <table className='table-fixed text-center w-full'>\n              <thead>\n                <tr className=''>\n                  <th className='w-1/1 px-1 py-2'>Gross Loan</th>\n                  <th className='w-1/1 px-1 py-2'>Status</th>\n                  <th className='w-1/6 px-1 py-2'>View</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* {loans.map((loan, index) => {\n                    <tr className='widgetLgTr'>\n                      <td className='flex items-center font-semibold'>\n                        <span className='widgetLgName'></span>\n                      </td>\n                      <td className='widgetLgDate'>{loan.maturity_date}</td>\n                      <td className='widgetLgAmount'>{loan.balance}</td>\n                      <td className='widgetLgStatus'>{loan.status}</td>\n                    </tr>; */}\n                {loans.length <= 0 ? (\n                  <tr className='border px-4 py-2 bg-red-50'>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                  </tr>\n                ) : (\n                  loans.map((loan, index) => {\n                    if (loan.status === 'Pending')\n                      return (\n                        <tr key={index}>\n                          <td className='border px-4 py-2 bg-gray-50'>\n                            ₱ {loan.gross_loan}\n                          </td>\n                          <td className='border px-4 py-2 '>\n                            <span className=' bg-yellow-300 text-white px-4 py-1 rounded-md'>\n                              {loan.status}\n                            </span>\n                          </td>\n                          <td className='border px-4 py-2  bg-gray-50'>\n                            <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\n                              <Link to={`/editLoan/${loan.id}`}>\n                                <VisibilityOutlined className='text-sm' />\n                              </Link>\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\bottom\\DatesWidget.jsx",["255","256","257","258","259","260","261"],[],"import {\n  AddBox,\n  PermIdentity,\n  VisibilityOutlined,\n  MailOutline,\n} from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { Edit } from '@mui/icons-material';\nimport { Link } from 'react-router-dom';\n\nexport default function DatesWidget() {\n  const [dates, setDates] = useState([]);\n  const [sortedDates, setSortedDates] = useState([]);\n\n  const getDates = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allLoans', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n      // console.log(parseRes);\n\n      setDates(parseRes);\n      console.log(dates);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getDates();\n  }, []);\n\n  console.log(\n    dates.sort((a, b) => {\n      return new Date(a.maturity_date) - new Date(b.maturity_date);\n    })\n  );\n\n  return (\n    <div className='w-full h-[450px]  '>\n      {/* CLIENTS */}\n      <div className='mt-5 p-8 rounded-xl border border-t-4 border-t-red-500 cursor-pointer shadow-md'>\n        <h3 className='text-xl mb-5 border-b-2'>Maturity Date</h3>\n        <div className='flex justify-between items-center'>\n          <div className='w-full h-[350px]  overflow-auto hover:overflow-scroll'>\n            <table className='table-fixed text-center w-full  '>\n              <thead className=''>\n                <tr className=''>\n                  <th className='w-1/1 px-1 py-2 '>Customer</th>\n                  <th className='w-1/1 px-1 py-2 '>Date</th>\n                  <th className='w-1/1 px-1 py-2 '>Balance</th>\n                  <th className='w-1/6 px-1 py-2 '>Email</th>\n                </tr>\n              </thead>\n              <tbody className='w-full'>\n                {/* {dates.map((date, index) => {\n                    <tr className='widgetLgTr'>\n                      <td className='flex items-center font-semibold'>\n                        <span className='widgetLgName'></span>\n                      </td>\n                      <td className='widgetLgDate'>{date.maturity_date}</td>\n                      <td className='widgetLgAmount'>{date.balance}</td>\n                      <td className='widgetLgStatus'>{date.status}</td>\n                    </tr>; */}\n                {dates.length <= 0 ? (\n                  <tr className='border px-4 py-2 bg-red-50'>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td className='px-4 py-2 bg-red-50'>No Loan Data</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                  </tr>\n                ) : (\n                  dates.map((date, index) => {\n                    return (\n                      <tr key={index} className>\n                        <td className='border px-4 py-2  bg-gray-50'>\n                          {date.firstname + ' ' + date.lastname}\n                        </td>\n                        <td className='border px-4 py-2 '>\n                          {new Date(date.maturity_date).toDateString()}\n                        </td>\n                        <td className='border px-4 py-2  bg-gray-50'>\n                          ₱ {date.balance}\n                        </td>\n                        <td className='border px-4 py-2'>\n                          <button className='bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full '>\n                            <Link to={`/emailClient`}>\n                              <MailOutline className='text-sm' />\n                            </Link>\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\LoansWidget.jsx",["262"],[],"import { CreditScore } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport default function LoansWidget() {\n  const [loans, setLoans] = useState([]);\n  const [gross, setGross] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const getLoans = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allLoans', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n      // console.log(parseRes);\n\n      setLoans(parseRes);\n\n      setGross(\n        loans.map((loan) => {\n          return Number(loan.gross_loan);\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getLoans();\n    setTotal(gross.reduce((a, b) => a + b, 0));\n  }, [gross]);\n\n  // console.log(loans.length);\n  return (\n    <div className='w-full'>\n      {/* Loans */}\n      <div\n        className='w-full  mt-5 p-8 rounded-xl cursor-pointer border border-t-4 border-t-red-500 hover:bg-red-500\n        hover:text-white hover:text-base transition duration-150\n        ease-in-out shadow-md'\n      >\n        <span className='text-xl'>Loans</span>\n        <div className='my-3'>\n          <span className='text-3xl'>\n            <CreditScore className='mr-3' />₱{' '}\n            {new Intl.NumberFormat().format(total)}\n          </span>\n        </div>\n        <span className='text-base text-gray-500'>\n          Total Loans Transactions\n        </span>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\ClientsWidget.jsx",["263","264"],[],"import { AddBox, PermIdentity } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport default function ClientsWidget() {\n  const [clients, setClients] = useState([]);\n\n  const getClients = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allClients', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n      // console.log(parseRes);\n\n      setClients(parseRes);\n      console.log(clients);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getClients();\n  }, []);\n\n  console.log(clients.length);\n\n  return (\n    <div className='w-full'>\n      {/* CLIENTS */}\n      <div\n        className='mt-5 p-8 rounded-xl border border-t-4 border-t-red-500 cursor-pointer hover:bg-red-500\n        hover:text-white hover:text-base transition duration-150\n        ease-in-out shadow-md'\n      >\n        <div className='flex justify-between items-center'>\n          <span className='text-xl'>Borrowers</span>\n        </div>\n        <div className='my-3 '>\n          <span className='text-3xl'>\n            <PermIdentity fontSize='30px' /> {clients.length}\n          </span>\n        </div>\n        <span className='text-base text-gray-500'>Total Clients Serviced</span>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\HP\\Desktop\\Inc\\Loan-Management-System\\client\\src\\components\\dashboard\\pages\\home\\top\\PaymentsWidget.jsx",["265"],[],"import { ReceiptLong } from '@mui/icons-material';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport default function PaymentsWidget() {\n  const [payments, setPayments] = useState([]);\n  const [amounts, setAmounts] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const getPayments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/allPayments', {\n        method: 'GET',\n        headers: { Authorization: localStorage.getItem('token') },\n      });\n\n      const parseRes = await response.json();\n\n      // console.log(parseRes);\n\n      setPayments(parseRes);\n\n      setAmounts(\n        payments.map((payment) => {\n          return Number(payment.amount);\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPayments();\n    setTotal(amounts.reduce((acc, val) => acc + val, 0));\n  }, [amounts]);\n\n  return (\n    <div className='w-full'>\n      {/* Payments */}\n      <div\n        className='w-full  mt-5 p-8 rounded-xl cursor-pointer border border-t-4 border-t-red-500 hover:bg-red-500\n        hover:text-white hover:text-base transition duration-150\n        ease-in-out shadow-md'\n      >\n        <span className='text-xl '>Payments</span>\n        <div className='my-3'>\n          <span className='text-3xl'>\n            <ReceiptLong className='mr-3' /> ₱\n            {new Intl.NumberFormat().format(total)}\n          </span>\n        </div>\n        <span className='text-base text-gray-500'>\n          Total Payments Collected\n        </span>\n      </div>\n      {/*  */}\n    </div>\n  );\n}\n",{"ruleId":"266","severity":1,"message":"267","line":25,"column":8,"nodeType":"268","messageId":"269","endLine":25,"endColumn":19},{"ruleId":"266","severity":1,"message":"270","line":27,"column":8,"nodeType":"268","messageId":"269","endLine":27,"endColumn":15},{"ruleId":"266","severity":1,"message":"271","line":51,"column":13,"nodeType":"268","messageId":"269","endLine":51,"endColumn":21},{"ruleId":"266","severity":1,"message":"272","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"273","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"266","severity":1,"message":"274","line":10,"column":3,"nodeType":"268","messageId":"269","endLine":10,"endColumn":14},{"ruleId":"266","severity":1,"message":"275","line":11,"column":3,"nodeType":"268","messageId":"269","endLine":11,"endColumn":7},{"ruleId":"276","severity":1,"message":"277","line":29,"column":17,"nodeType":"278","endLine":32,"endColumn":18},{"ruleId":"279","severity":1,"message":"280","line":192,"column":15,"nodeType":"278","endLine":195,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":289,"column":15,"nodeType":"278","endLine":292,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":710,"column":13,"nodeType":"278","endLine":713,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":722,"column":17,"nodeType":"278","endLine":722,"endColumn":71},{"ruleId":"276","severity":1,"message":"277","line":738,"column":17,"nodeType":"278","endLine":738,"endColumn":72},{"ruleId":"276","severity":1,"message":"277","line":754,"column":17,"nodeType":"278","endLine":754,"endColumn":72},{"ruleId":"276","severity":1,"message":"277","line":766,"column":17,"nodeType":"278","endLine":766,"endColumn":72},{"ruleId":"266","severity":1,"message":"281","line":3,"column":16,"nodeType":"268","messageId":"269","endLine":3,"endColumn":24},{"ruleId":"266","severity":1,"message":"271","line":73,"column":13,"nodeType":"268","messageId":"269","endLine":73,"endColumn":21},{"ruleId":"266","severity":1,"message":"282","line":3,"column":16,"nodeType":"268","messageId":"269","endLine":3,"endColumn":27},{"ruleId":"266","severity":1,"message":"283","line":9,"column":3,"nodeType":"268","messageId":"269","endLine":9,"endColumn":10},{"ruleId":"266","severity":1,"message":"284","line":4,"column":31,"nodeType":"268","messageId":"269","endLine":4,"endColumn":37},{"ruleId":"266","severity":1,"message":"271","line":155,"column":13,"nodeType":"268","messageId":"269","endLine":155,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":170,"column":6,"nodeType":"287","endLine":170,"endColumn":8,"suggestions":"288"},{"ruleId":"266","severity":1,"message":"289","line":82,"column":13,"nodeType":"268","messageId":"269","endLine":82,"endColumn":22},{"ruleId":"266","severity":1,"message":"271","line":105,"column":13,"nodeType":"268","messageId":"269","endLine":105,"endColumn":21},{"ruleId":"266","severity":1,"message":"271","line":79,"column":13,"nodeType":"268","messageId":"269","endLine":79,"endColumn":21},{"ruleId":"266","severity":1,"message":"281","line":3,"column":16,"nodeType":"268","messageId":"269","endLine":3,"endColumn":24},{"ruleId":"266","severity":1,"message":"271","line":66,"column":13,"nodeType":"268","messageId":"269","endLine":66,"endColumn":21},{"ruleId":"266","severity":1,"message":"283","line":10,"column":3,"nodeType":"268","messageId":"269","endLine":10,"endColumn":10},{"ruleId":"285","severity":1,"message":"290","line":47,"column":6,"nodeType":"287","endLine":47,"endColumn":8,"suggestions":"291"},{"ruleId":"266","severity":1,"message":"271","line":90,"column":13,"nodeType":"268","messageId":"269","endLine":90,"endColumn":21},{"ruleId":"285","severity":1,"message":"292","line":106,"column":6,"nodeType":"287","endLine":106,"endColumn":8,"suggestions":"293"},{"ruleId":"266","severity":1,"message":"271","line":71,"column":13,"nodeType":"268","messageId":"269","endLine":71,"endColumn":21},{"ruleId":"266","severity":1,"message":"294","line":3,"column":29,"nodeType":"268","messageId":"269","endLine":3,"endColumn":40},{"ruleId":"285","severity":1,"message":"295","line":34,"column":6,"nodeType":"287","endLine":34,"endColumn":8,"suggestions":"296"},{"ruleId":"266","severity":1,"message":"297","line":6,"column":25,"nodeType":"268","messageId":"269","endLine":6,"endColumn":43},{"ruleId":"266","severity":1,"message":"298","line":6,"column":45,"nodeType":"268","messageId":"269","endLine":6,"endColumn":51},{"ruleId":"266","severity":1,"message":"299","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":23},{"ruleId":"266","severity":1,"message":"300","line":1,"column":25,"nodeType":"268","messageId":"269","endLine":1,"endColumn":29},{"ruleId":"266","severity":1,"message":"284","line":1,"column":31,"nodeType":"268","messageId":"269","endLine":1,"endColumn":37},{"ruleId":"266","severity":1,"message":"301","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"302","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":20},{"ruleId":"285","severity":1,"message":"295","line":34,"column":6,"nodeType":"287","endLine":34,"endColumn":8,"suggestions":"303"},{"ruleId":"266","severity":1,"message":"304","line":4,"column":3,"nodeType":"268","messageId":"269","endLine":4,"endColumn":8},{"ruleId":"266","severity":1,"message":"305","line":5,"column":3,"nodeType":"268","messageId":"269","endLine":5,"endColumn":11},{"ruleId":"266","severity":1,"message":"284","line":6,"column":3,"nodeType":"268","messageId":"269","endLine":6,"endColumn":9},{"ruleId":"285","severity":1,"message":"295","line":71,"column":6,"nodeType":"287","endLine":71,"endColumn":8,"suggestions":"306"},{"ruleId":"266","severity":1,"message":"298","line":4,"column":37,"nodeType":"268","messageId":"269","endLine":4,"endColumn":43},{"ruleId":"266","severity":1,"message":"300","line":4,"column":25,"nodeType":"268","messageId":"269","endLine":4,"endColumn":29},{"ruleId":"266","severity":1,"message":"284","line":4,"column":31,"nodeType":"268","messageId":"269","endLine":4,"endColumn":37},{"ruleId":"285","severity":1,"message":"307","line":68,"column":6,"nodeType":"287","endLine":68,"endColumn":8,"suggestions":"308"},{"ruleId":"266","severity":1,"message":"300","line":5,"column":10,"nodeType":"268","messageId":"269","endLine":5,"endColumn":14},{"ruleId":"285","severity":1,"message":"309","line":29,"column":6,"nodeType":"287","endLine":29,"endColumn":8,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":70,"column":43,"nodeType":"313","messageId":"314","endLine":70,"endColumn":45},{"ruleId":"266","severity":1,"message":"315","line":2,"column":3,"nodeType":"268","messageId":"269","endLine":2,"endColumn":9},{"ruleId":"266","severity":1,"message":"316","line":3,"column":3,"nodeType":"268","messageId":"269","endLine":3,"endColumn":15},{"ruleId":"266","severity":1,"message":"297","line":4,"column":3,"nodeType":"268","messageId":"269","endLine":4,"endColumn":21},{"ruleId":"266","severity":1,"message":"300","line":10,"column":10,"nodeType":"268","messageId":"269","endLine":10,"endColumn":14},{"ruleId":"266","severity":1,"message":"317","line":15,"column":10,"nodeType":"268","messageId":"269","endLine":15,"endColumn":21},{"ruleId":"266","severity":1,"message":"318","line":15,"column":23,"nodeType":"268","messageId":"269","endLine":15,"endColumn":37},{"ruleId":"285","severity":1,"message":"319","line":35,"column":6,"nodeType":"287","endLine":35,"endColumn":8,"suggestions":"320"},{"ruleId":"285","severity":1,"message":"309","line":34,"column":6,"nodeType":"287","endLine":34,"endColumn":13,"suggestions":"321"},{"ruleId":"266","severity":1,"message":"315","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":16},{"ruleId":"285","severity":1,"message":"322","line":26,"column":6,"nodeType":"287","endLine":26,"endColumn":8,"suggestions":"323"},{"ruleId":"285","severity":1,"message":"324","line":36,"column":6,"nodeType":"287","endLine":36,"endColumn":15,"suggestions":"325"},"no-unused-vars","'AddPayments' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'parseRes' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'MailOutline' is defined but never used.","'Home' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","'Navigate' is defined but never used.","'useLocation' is defined but never used.","'Publish' is defined but never used.","'Update' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetLoan'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'timestamp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.",["327"],"React Hook useEffect has a missing dependency: 'GetClient'. Either include it or remove the dependency array.",["328"],"'useNavigate' is defined but never used.","React Hook useEffect has a missing dependency: 'GetLoans'. Either include it or remove the dependency array.",["329"],"'VisibilityOutlined' is defined but never used.","'Logout' is defined but never used.","'DeleteForever' is defined but never used.","'Edit' is defined but never used.","'Link' is defined but never used.","'PaymentsInfo' is defined but never used.",["330"],"'Money' is defined but never used.","'Payments' is defined but never used.",["331"],"React Hook useEffect has a missing dependency: 'GetPayments'. Either include it or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'getLoans'. Either include it or remove the dependency array.",["333"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AddBox' is defined but never used.","'PermIdentity' is defined but never used.","'sortedDates' is assigned a value but never used.","'setSortedDates' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDates'. Either include it or remove the dependency array.",["334"],["335"],"React Hook useEffect has a missing dependency: 'getClients'. Either include it or remove the dependency array.",["336"],"React Hook useEffect has a missing dependency: 'getPayments'. Either include it or remove the dependency array.",["337"],{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"344","fix":"346"},{"desc":"344","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},"Update the dependencies array to be: [GetLoan]",{"range":"360","text":"361"},"Update the dependencies array to be: [getClient]",{"range":"362","text":"363"},"Update the dependencies array to be: [GetClient]",{"range":"364","text":"365"},"Update the dependencies array to be: [GetLoans]",{"range":"366","text":"367"},{"range":"368","text":"367"},{"range":"369","text":"367"},"Update the dependencies array to be: [GetPayments]",{"range":"370","text":"371"},"Update the dependencies array to be: [getLoans]",{"range":"372","text":"373"},"Update the dependencies array to be: [getDates]",{"range":"374","text":"375"},"Update the dependencies array to be: [getLoans, gross]",{"range":"376","text":"377"},"Update the dependencies array to be: [getClients]",{"range":"378","text":"379"},"Update the dependencies array to be: [amounts, getPayments]",{"range":"380","text":"381"},[3946,3948],"[GetLoan]",[1249,1251],"[getClient]",[2463,2465],"[GetClient]",[908,910],"[GetLoans]",[889,891],[1653,1655],[1663,1665],"[GetPayments]",[753,755],"[getLoans]",[848,850],"[getDates]",[871,878],"[getLoans, gross]",[682,684],"[getClients]",[915,924],"[amounts, getPayments]"]